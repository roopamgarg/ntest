{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser as _loginUser } from \"../redux/index\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\nimport Link from \"next/link\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction LoginPage(props) {\n  //   useEffect(()=>{\n  //     if(cookie.load('token')){\n  //       return Router.push('/')\n  //     }\n  //   })\n  //   const handleSubmit = e => {\n  //     e.preventDefault();\n  //     props.form.validateFields((err, values) => {\n  //       if (!err) {\n  //         console.log(\"Received values of form: \", values);\n  //         props.loginUser(values, props.history, message);\n  //       }\n  //     });\n  //   };\n  //   const { getFieldDecorator } = props.form;\n  return __jsx(LoginForm, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n} // const WrappedLoginForm = Form.create({ name: \"login_form\" })(LoginForm);\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginLoader: state.user.loginLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser(data, history, message) {\n      return dispatch(_loginUser(data, history, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/login.js"],"names":["React","useEffect","Form","Icon","Input","Button","Checkbox","loginUser","connect","message","Link","cookie","Router","LoginForm","LoginPage","props","mapStateToProps","state","loginLoader","user","mapDispatchToProps","dispatch","data","history"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,MAApD;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SACE,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,C,CAED;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD;AADQ,GAAL;AAAA,CAA7B;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLd,IAAAA,SAAS,EAAE,mBAACe,IAAD,EAAOC,OAAP,EAAgBd,OAAhB;AAAA,aACTY,QAAQ,CAACd,UAAS,CAACe,IAAD,EAAOC,OAAP,EAAgBd,OAAhB,CAAV,CADC;AAAA;AADN,GAAP;AAID,CALD;;AAMA,eAAeD,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser } from \"../redux/index\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\nimport Link from \"next/link\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router'\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction LoginPage(props) {\n//   useEffect(()=>{\n//     if(cookie.load('token')){\n//       return Router.push('/')\n//     }\n//   })\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     props.form.validateFields((err, values) => {\n//       if (!err) {\n//         console.log(\"Received values of form: \", values);\n//         props.loginUser(values, props.history, message);\n//       }\n//     });\n//   };\n//   const { getFieldDecorator } = props.form;\n  return (\n    <LoginForm {...props}/>\n  );\n}\n\n// const WrappedLoginForm = Form.create({ name: \"login_form\" })(LoginForm);\nconst mapStateToProps = state => ({\n  loginLoader: state.user.loginLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (data, history, message) =>\n      dispatch(loginUser(data, history, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}