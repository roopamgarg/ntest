{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/register.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport cookie from \"react-cookies\";\nimport Router from \"next/router\";\nimport Layout from \"../components/layout/Layout\";\nimport RegisterForm from \"../components/forms/RegisterForm\";\nimport { registerUser } from \"../redux/index\";\n\nfunction RegisterPage(props) {\n  useEffect(() => {\n    if (cookie.load(\"token\")) {\n      return Router.push(\"/\");\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          await props.registerUser(values, props.history, message);\n        } catch (err) {}\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"login__form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(RegisterForm, {\n    getFieldDecorator: getFieldDecorator,\n    registerLoader: props.registerLoader,\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nconst WrappedRegisterForm = Form.create({\n  name: \"register_form\"\n})(RegisterPage);\n\nconst mapStateToProps = state => ({\n  registerLoader: state.user.registerLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: (data, history, message) => registerUser(data, history, message)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterForm);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/register.js"],"names":["React","useEffect","Form","Icon","Input","Button","Checkbox","message","connect","cookie","Router","Layout","RegisterForm","registerUser","RegisterPage","props","load","push","handleSubmit","e","preventDefault","form","validateFields","err","values","history","getFieldDecorator","registerLoader","WrappedRegisterForm","create","name","mapStateToProps","state","user","mapDispatchToProps","dispatch","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE3Bd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,CAACO,IAAP,CAAY,OAAZ,CAAJ,EAA0B;AACxB,aAAON,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAP;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,KAAK,CAACM,IAAN,CAAWC,cAAX,CAA0B,OAAOC,GAAP,EAAYC,MAAZ,KAAuB;AAC/C,UAAI,CAACD,GAAL,EAAU;AACR,YAAI;AACF,gBAAMR,KAAK,CAACF,YAAN,CAAmBW,MAAnB,EAA2BT,KAAK,CAACU,OAAjC,EAA0ClB,OAA1C,CAAN;AACD,SAFD,CAEE,OAAOgB,GAAP,EAAY,CAAE;AACjB;AACF,KAND;AAOD,GATD;;AAWA,QAAM;AAAEG,IAAAA;AAAF,MAAwBX,KAAK,CAACM,IAApC;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,iBAAiB,EAAEK,iBADrB;AAEE,IAAA,cAAc,EAAEX,KAAK,CAACY,cAFxB;AAGE,IAAA,YAAY,EAAET,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD;;AACD,MAAMU,mBAAmB,GAAG1B,IAAI,CAAC2B,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAC1BhB,YAD0B,CAA5B;;AAIA,MAAMiB,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,cAAc,EAAEK,KAAK,CAACC,IAAN,CAAWN;AADK,CAAL,CAA7B;;AAIA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLtB,IAAAA,YAAY,EAAE,CAACuB,IAAD,EAAOX,OAAP,EAAgBlB,OAAhB,KACZM,YAAY,CAACuB,IAAD,EAAOX,OAAP,EAAgBlB,OAAhB,CAAZ,CAAqC4B,QAArC;AAFG,GAAP;AAID,CALD;;AAMA,eAAe3B,OAAO,CACpBuB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbN,mBAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport cookie from \"react-cookies\";\nimport Router from \"next/router\";\n\nimport Layout from \"../components/layout/Layout\";\nimport RegisterForm from \"../components/forms/RegisterForm\";\n\nimport { registerUser } from \"../redux/index\";\n\nfunction RegisterPage(props) {\n\n  useEffect(() => {\n    if (cookie.load(\"token\")) {\n      return Router.push(\"/\");\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          await props.registerUser(values, props.history, message);\n        } catch (err) {}\n      }\n    });\n  };\n\n  const { getFieldDecorator } = props.form;\n\n  return (\n    <Layout>\n      <div className=\"login__form-container\">\n        <RegisterForm\n          getFieldDecorator={getFieldDecorator}\n          registerLoader={props.registerLoader}\n          handleSubmit={handleSubmit}\n        />\n      </div>\n    </Layout>\n  );\n}\nconst WrappedRegisterForm = Form.create({ name: \"register_form\" })(\n  RegisterPage\n);\n\nconst mapStateToProps = state => ({\n  registerLoader: state.user.registerLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: (data, history, message) =>\n      registerUser(data, history, message)(dispatch)\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegisterForm);\n"]},"metadata":{},"sourceType":"module"}