{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport { GET_QUESTIONS_FAILURE, GET_QUESTIONS_REQUEST, GET_QUESTIONS_SUCCESS, GET_QUESTION_DESCRIPTION_FAILURE, GET_QUESTION_DESCRIPTION_REQUEST, GET_QUESTION_DESCRIPTION_SUCCESS, ASK_QUESTION_FAILURE, ASK_QUESTION_SUCCESS, ASK_QUESTION_REQUEST, ADD_REPLY_FAILURE, ADD_REPLY_SUCCESS, ADD_REPLY_REQUEST, EDIT_REPLY } from \"./questionTypes\";\nimport { message } from \"antd\";\nimport API_URL from \"../helpers/API_URL\";\nimport axios from \"axios\";\nimport { getHeaders } from \"../helpers/getHeaders\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nvar getQuestionRequest = function getQuestionRequest() {\n  return {\n    type: GET_QUESTIONS_REQUEST\n  };\n};\n\nvar getQuestionSuccess = function getQuestionSuccess(res) {\n  return {\n    type: GET_QUESTIONS_SUCCESS,\n    payload: res\n  };\n};\n\nvar getQuestionFailure = function getQuestionFailure(err) {\n  return {\n    type: GET_QUESTIONS_FAILURE,\n    payload: err\n  };\n};\n\nvar getCurrentQuestionReq = function getCurrentQuestionReq() {\n  return {\n    type: GET_QUESTION_DESCRIPTION_REQUEST\n  };\n};\n\nvar getCurrentQuestionSuccess = function getCurrentQuestionSuccess(res) {\n  return {\n    type: GET_QUESTION_DESCRIPTION_SUCCESS,\n    payload: res\n  };\n};\n\nvar getCurrentQuestionFailure = function getCurrentQuestionFailure(err) {\n  return {\n    type: GET_QUESTION_DESCRIPTION_FAILURE,\n    payload: err\n  };\n};\n\nvar askQuestionRequest = function askQuestionRequest() {\n  return {\n    type: ASK_QUESTION_REQUEST\n  };\n};\n\nvar askQuestionSuccess = function askQuestionSuccess() {\n  return {\n    type: ASK_QUESTION_SUCCESS\n  };\n};\n\nvar askQuestionFailure = function askQuestionFailure() {\n  return {\n    type: ASK_QUESTION_FAILURE\n  };\n};\n\nvar addReplyRequest = function addReplyRequest() {\n  return {\n    type: ADD_REPLY_REQUEST\n  };\n};\n\nvar addReplySuccess = function addReplySuccess() {\n  return {\n    type: ADD_REPLY_SUCCESS\n  };\n};\n\nvar addReplyFailure = function addReplyFailure() {\n  return {\n    type: ADD_REPLY_FAILURE\n  };\n};\n\nvar editReply = function editReply(res) {\n  return {\n    type: EDIT_REPLY,\n    payload: res\n  };\n};\n\nexport var getQuestions = function getQuestions(search, pageNo, pageSize) {\n  console.log;\n  search = typeof search === \"string\" ? search : \"\";\n  return function (dispatch) {\n    dispatch(getQuestionRequest());\n    axios.get(\"\".concat(API_URL, \"question/search?search=\").concat(search)).then(function (response) {\n      var res = response.data;\n      dispatch(getQuestionSuccess(res));\n    })[\"catch\"](function (error) {\n      console.log(error);\n      message.error(error.response.data.message);\n      dispatch(getQuestionFailure(error.message));\n    });\n  };\n};\nexport var getQuestionById = function getQuestionById(id) {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n\n  if (!id) {\n    return function (dispatch) {\n      message.error(\"Invalid ID\");\n      dispatch(getCurrentQuestionFailure(\"Invalid ID\"));\n    };\n  }\n\n  return function (dispatch) {\n    dispatch(getCurrentQuestionReq());\n    axios.get(\"\".concat(API_URL, \"question/search/\").concat(id)).then(function (response) {\n      var res = response.data;\n      dispatch(getCurrentQuestionSuccess(res));\n    })[\"catch\"](function (error) {\n      console.log(error);\n      message.error(error.response.data.message);\n      dispatch(getCurrentQuestionFailure(error.message));\n    });\n  };\n};\nexport var voteQuestion = function voteQuestion(id, type, history) {\n  console.log(id, type);\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n\n  if (!id || !type) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\"); // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n\n  var types = {\n    \"true\": \"upvote\",\n    \"false\": \"downvote\"\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(API_URL, \"question/\").concat(types[type], \"/\").concat(id), {}, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(getCurrentQuestionSuccess(res));\n    })[\"catch\"](function (error) {\n      console.log(error);\n\n      if (error.response.status === 401) {\n        history.push(\"/login\");\n      }\n\n      message.error(error.response.data.message);\n    });\n  };\n};\nexport var askQuestion = function askQuestion(data) {\n  data.title = typeof data.title === \"string\" && data.title.trim().length > 0 ? data.title.trim() : false;\n  data.description = typeof data.description === \"string\" && data.description.trim().length > 0 ? data.description.trim() : false;\n  data.tags = _Array$isArray(data.tags) && data.tags.length > 0 ? data.tags : false;\n\n  if (!(data.title && data.description && data.tags)) {\n    return function (dispatch) {\n      dispatch(askQuestionFailure());\n    };\n  }\n\n  var body = {\n    title: data.title,\n    description: data.description,\n    tags: data.tags\n  };\n  return function (dispatch) {\n    dispatch(askQuestionRequest());\n    axios.post(\"\".concat(API_URL, \"question/ask\"), body, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(askQuestionSuccess());\n      dispatch(getQuestions());\n    })[\"catch\"](function (error) {\n      message.error(error.response.data.message);\n      dispatch(askQuestionFailure());\n    });\n  };\n};\nexport var voteReply = function voteReply(id, type, history) {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n\n  if (!id || !type) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\"); // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n\n  var types = {\n    \"true\": \"upvote\",\n    \"false\": \"downvote\"\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(API_URL, \"reply/\").concat(types[type], \"/\").concat(id), {}, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(editReply(res));\n    })[\"catch\"](function (error) {\n      console.log(error.response);\n\n      if (error.response.status === 401) {\n        history.push(\"/login\");\n      }\n\n      message.error(error.response.data.message);\n    });\n  };\n};\nexport var addReply = function addReply(data) {\n  data.text = typeof data.text === \"string\" && data.text.trim().length > 0 ? data.text.trim() : false;\n  data.questionId = typeof data.questionId === \"string\" && data.questionId.trim().length > 0 ? data.questionId.trim() : false;\n\n  if (!(data.text && data.questionId)) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\");\n      dispatch(askReplyFailure());\n    };\n  }\n\n  var body = {\n    text: data.text,\n    questionId: data.questionId\n  };\n  return function (dispatch) {\n    dispatch(addReplyRequest());\n    axios.post(\"\".concat(API_URL, \"reply/\"), body, getHeaders()).then(function (response) {\n      var res = response.data;\n      message.success(\"Reply Added Successfully\");\n      dispatch(addReplySuccess());\n      dispatch(getQuestionById(data.questionId));\n    })[\"catch\"](function (error) {\n      message.error(error.response.data.message);\n      dispatch(addReplyFailure());\n    });\n  };\n};","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/redux/question/questionActions.js"],"names":["GET_QUESTIONS_FAILURE","GET_QUESTIONS_REQUEST","GET_QUESTIONS_SUCCESS","GET_QUESTION_DESCRIPTION_FAILURE","GET_QUESTION_DESCRIPTION_REQUEST","GET_QUESTION_DESCRIPTION_SUCCESS","ASK_QUESTION_FAILURE","ASK_QUESTION_SUCCESS","ASK_QUESTION_REQUEST","ADD_REPLY_FAILURE","ADD_REPLY_SUCCESS","ADD_REPLY_REQUEST","EDIT_REPLY","message","API_URL","axios","getHeaders","React","Redirect","getQuestionRequest","type","getQuestionSuccess","res","payload","getQuestionFailure","err","getCurrentQuestionReq","getCurrentQuestionSuccess","getCurrentQuestionFailure","askQuestionRequest","askQuestionSuccess","askQuestionFailure","addReplyRequest","addReplySuccess","addReplyFailure","editReply","getQuestions","search","pageNo","pageSize","console","log","dispatch","get","then","response","data","error","getQuestionById","id","length","voteQuestion","history","toString","types","post","status","push","askQuestion","title","trim","description","tags","body","voteReply","addReply","text","questionId","askReplyFailure","success"],"mappings":"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","sourcesContent":["import {\n  GET_QUESTIONS_FAILURE,\n  GET_QUESTIONS_REQUEST,\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTION_DESCRIPTION_FAILURE,\n  GET_QUESTION_DESCRIPTION_REQUEST,\n  GET_QUESTION_DESCRIPTION_SUCCESS,\n  ASK_QUESTION_FAILURE,\n  ASK_QUESTION_SUCCESS,\n  ASK_QUESTION_REQUEST,\n  ADD_REPLY_FAILURE,\n  ADD_REPLY_SUCCESS,\n  ADD_REPLY_REQUEST,\n  EDIT_REPLY\n} from \"./questionTypes\";\nimport { message } from \"antd\";\nimport API_URL from \"../helpers/API_URL\";\nimport axios from \"axios\";\nimport {getHeaders} from \"../helpers/getHeaders\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nconst getQuestionRequest = () => ({\n  type: GET_QUESTIONS_REQUEST\n});\nconst getQuestionSuccess = res => ({\n  type: GET_QUESTIONS_SUCCESS,\n  payload: res\n});\nconst getQuestionFailure = err => ({\n  type: GET_QUESTIONS_FAILURE,\n  payload: err\n});\n\nconst getCurrentQuestionReq = () => ({\n  type: GET_QUESTION_DESCRIPTION_REQUEST\n});\n\nconst getCurrentQuestionSuccess = res => ({\n  type: GET_QUESTION_DESCRIPTION_SUCCESS,\n  payload: res\n});\n\nconst getCurrentQuestionFailure = err => ({\n  type: GET_QUESTION_DESCRIPTION_FAILURE,\n  payload: err\n});\nconst askQuestionRequest = () => ({\n  type:ASK_QUESTION_REQUEST\n})\nconst askQuestionSuccess = () => ({\n  type:ASK_QUESTION_SUCCESS\n})\nconst askQuestionFailure = () => ({\n  type:ASK_QUESTION_FAILURE\n})\n\nconst addReplyRequest = () => ({\n  type:ADD_REPLY_REQUEST\n})\nconst addReplySuccess = () => ({\n  type:ADD_REPLY_SUCCESS\n})\nconst addReplyFailure = () => ({\n  type:ADD_REPLY_FAILURE\n})\nconst editReply = res => ({\n  type:EDIT_REPLY,\n  payload:res\n})\n\nexport const getQuestions = (search, pageNo, pageSize) => {\n  console.log\n  search = typeof search === \"string\" ? search : \"\";\n  return function(dispatch) {\n    dispatch(getQuestionRequest());\n    axios\n      .get(`${API_URL}question/search?search=${search}`)\n      .then(response => {\n        const res = response.data;\n        dispatch(getQuestionSuccess(res));\n      })\n      .catch(error => {\n        console.log(error);\n        message.error(error.response.data.message);\n        dispatch(getQuestionFailure(error.message));\n      });\n  };\n};\n\nexport const getQuestionById = id => {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  if (!id) {\n    return function(dispatch) {\n      message.error(\"Invalid ID\");\n      dispatch(getCurrentQuestionFailure(\"Invalid ID\"));\n    };\n  }\n  return function(dispatch) {\n    dispatch(getCurrentQuestionReq());\n    axios\n      .get(`${API_URL}question/search/${id}`)\n      .then(response => {\n        const res = response.data;\n        dispatch(getCurrentQuestionSuccess(res));\n      })\n      .catch(error => {\n        console.log(error);\n        message.error(error.response.data.message);\n        dispatch(getCurrentQuestionFailure(error.message));\n      });\n  };\n};\n\nexport const voteQuestion = (id, type, history) => {\n  console.log(id,type)\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n  if (!id || !type) {\n    return function(dispatch) {\n      message.error(\"Missing Required Fields\");\n     // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n  const types = {\n    true: \"upvote\",\n    false: \"downvote\"\n  };\n  return function(dispatch) {\n    axios\n      .post(`${API_URL}question/${types[type]}/${id}`, {},getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(getCurrentQuestionSuccess(res));\n        \n      })\n      .catch(error => {\n        console.log(error);\n        if(error.response.status === 401){\n          history.push(\"/login\")\n         }\n        message.error(error.response.data.message);\n      });\n  };\n};\n\nexport const askQuestion = (data) => {\n  data.title = typeof data.title === \"string\" && data.title.trim().length > 0 ? data.title.trim() : false;\n  data.description = typeof data.description === \"string\" && data.description.trim().length > 0 ? data.description.trim() : false;\n  data.tags = Array.isArray(data.tags) && data.tags.length > 0 ? data.tags : false\n  if(!(data.title && data.description && data.tags)){\n    return function(dispatch){\n      dispatch(askQuestionFailure());\n    }\n  }\n  \n  const body = {\n    title:data.title,\n    description:data.description,\n    tags:data.tags\n  }\n  return function(dispatch) {\n    dispatch(askQuestionRequest());\n    axios\n      .post(`${API_URL}question/ask`,body,getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(askQuestionSuccess());\n        dispatch(getQuestions())\n      })\n      .catch(error => {\n\n        message.error(error.response.data.message);\n        dispatch(askQuestionFailure());\n      });\n  };\n};\n\n\nexport const voteReply = (id, type, history) => {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n  if (!id || !type) {\n    return function(dispatch) {\n      message.error(\"Missing Required Fields\");\n     // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n  const types = {\n    true: \"upvote\",\n    false: \"downvote\"\n  };\n  return function(dispatch) {\n    axios\n      .post(`${API_URL}reply/${types[type]}/${id}`, {},getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(editReply(res));\n        \n      })\n      .catch(error => {\n        console.log(error.response);\n        if(error.response.status === 401){\n         history.push(\"/login\")\n        }\n        message.error(error.response.data.message);\n      });\n  };\n};\n\n\n\n\n\nexport const addReply = (data) => {\n  data.text = typeof data.text === \"string\" && data.text.trim().length > 0 ? data.text.trim() : false;\n  data.questionId = typeof data.questionId === \"string\" && data.questionId.trim().length > 0 ? data.questionId.trim() : false;\n\n  if(!(data.text && data.questionId)){\n    return function(dispatch){\n      message.error(\"Missing Required Fields\")\n      dispatch(askReplyFailure());\n    }\n  }\n  \n  const body = {\n    text:data.text,\n    questionId:data.questionId\n  }\n  return function(dispatch) {\n    dispatch(addReplyRequest());\n    axios\n      .post(`${API_URL}reply/`,body,getHeaders())\n      .then(response => {\n        const res = response.data;\n        message.success(\"Reply Added Successfully\")\n        dispatch(addReplySuccess());\n        dispatch(getQuestionById(data.questionId))\n      })\n      .catch(error => {\n\n        message.error(error.response.data.message);\n        dispatch(addReplyFailure());\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}