{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { GET_QUESTIONS_FAILURE, GET_QUESTIONS_REQUEST, GET_QUESTIONS_SUCCESS, GET_QUESTION_DESCRIPTION_FAILURE, GET_QUESTION_DESCRIPTION_REQUEST, GET_QUESTION_DESCRIPTION_SUCCESS, ASK_QUESTION_FAILURE, ASK_QUESTION_SUCCESS, ASK_QUESTION_REQUEST, ADD_REPLY_FAILURE, ADD_REPLY_SUCCESS, ADD_REPLY_REQUEST, EDIT_REPLY } from \"./questionTypes\";\nimport { message } from \"antd\";\nimport API_URL from \"../helpers/API_URL\";\nimport axios from \"axios\";\nimport { getHeaders } from \"../helpers/getHeaders\";\nimport React from \"react\";\nimport Router from \"next/router\";\n\nvar getQuestionRequest = function getQuestionRequest() {\n  return {\n    type: GET_QUESTIONS_REQUEST\n  };\n};\n\nvar getQuestionSuccess = function getQuestionSuccess(res) {\n  return {\n    type: GET_QUESTIONS_SUCCESS,\n    payload: res\n  };\n};\n\nvar getQuestionFailure = function getQuestionFailure(err) {\n  return {\n    type: GET_QUESTIONS_FAILURE,\n    payload: err\n  };\n};\n\nvar getCurrentQuestionReq = function getCurrentQuestionReq() {\n  return {\n    type: GET_QUESTION_DESCRIPTION_REQUEST\n  };\n};\n\nvar getCurrentQuestionSuccess = function getCurrentQuestionSuccess(res) {\n  return {\n    type: GET_QUESTION_DESCRIPTION_SUCCESS,\n    payload: res\n  };\n};\n\nvar getCurrentQuestionFailure = function getCurrentQuestionFailure(err) {\n  return {\n    type: GET_QUESTION_DESCRIPTION_FAILURE,\n    payload: err\n  };\n};\n\nvar askQuestionRequest = function askQuestionRequest() {\n  return {\n    type: ASK_QUESTION_REQUEST\n  };\n};\n\nvar askQuestionSuccess = function askQuestionSuccess() {\n  return {\n    type: ASK_QUESTION_SUCCESS\n  };\n};\n\nvar askQuestionFailure = function askQuestionFailure() {\n  return {\n    type: ASK_QUESTION_FAILURE\n  };\n};\n\nvar addReplyRequest = function addReplyRequest() {\n  return {\n    type: ADD_REPLY_REQUEST\n  };\n};\n\nvar addReplySuccess = function addReplySuccess() {\n  return {\n    type: ADD_REPLY_SUCCESS\n  };\n};\n\nvar addReplyFailure = function addReplyFailure() {\n  return {\n    type: ADD_REPLY_FAILURE\n  };\n};\n\nvar editReply = function editReply(res) {\n  return {\n    type: EDIT_REPLY,\n    payload: res\n  };\n};\n\nexport var getQuestions = function getQuestions(search, pageNo, pageSize) {\n  return _regeneratorRuntime.async(function getQuestions$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          search = typeof search === \"string\" ? search : \"\";\n          return _context2.abrupt(\"return\", function _callee(dispatch) {\n            var _response;\n\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    dispatch(getQuestionRequest());\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return _regeneratorRuntime.awrap(axios.get(\"\".concat(API_URL, \"question/search?search=\").concat(search)));\n\n                  case 4:\n                    _response = _context.sent;\n                    _response = _response.data;\n                    return _context.abrupt(\"return\", dispatch(getQuestionSuccess(_response)));\n\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](1);\n                    message.error(_context.t0.response.data.message);\n                    return _context.abrupt(\"return\", dispatch(getQuestionFailure(_context.t0.message)));\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[1, 9]]);\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getQuestionById = function getQuestionById(id) {\n  console.log(\"hii\");\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n\n  if (!id) {\n    return function (dispatch) {\n      message.error(\"Invalid ID\");\n      dispatch(getCurrentQuestionFailure(\"Invalid ID\"));\n    };\n  }\n\n  return function _callee2(dispatch) {\n    var _response2;\n\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dispatch(getCurrentQuestionReq());\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"\".concat(API_URL, \"question/search/\").concat(id)));\n\n          case 4:\n            _response2 = _context3.sent;\n            _response2 = _response2.data;\n            return _context3.abrupt(\"return\", dispatch(getCurrentQuestionSuccess(_response2)));\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            message.error(_context3.t0.response.data.message);\n            dispatch(getCurrentQuestionFailure(_context3.t0.message));\n            return _context3.abrupt(\"return\", response);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n};\nexport var voteQuestion = function voteQuestion(id, type, history) {\n  console.log(id, type);\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n\n  if (!id || !type) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\"); // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n\n  var types = {\n    \"true\": \"upvote\",\n    \"false\": \"downvote\"\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(API_URL, \"question/\").concat(types[type], \"/\").concat(id), {}, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(getCurrentQuestionSuccess(res));\n    })[\"catch\"](function (error) {\n      console.log(error);\n\n      if (error.response.status === 401) {\n        Router.push(\"/login\");\n      }\n\n      message.error(error.response.data.message);\n    });\n  };\n};\nexport var askQuestion = function askQuestion(data) {\n  data.title = typeof data.title === \"string\" && data.title.trim().length > 0 ? data.title.trim() : false;\n  data.description = typeof data.description === \"string\" && data.description.trim().length > 0 ? data.description.trim() : false;\n  data.tags = _Array$isArray(data.tags) && data.tags.length > 0 ? data.tags : false;\n\n  if (!(data.title && data.description && data.tags)) {\n    return function (dispatch) {\n      dispatch(askQuestionFailure());\n    };\n  }\n\n  var body = {\n    title: data.title,\n    description: data.description,\n    tags: data.tags\n  };\n  return function (dispatch) {\n    dispatch(askQuestionRequest());\n    axios.post(\"\".concat(API_URL, \"question/ask\"), body, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(askQuestionSuccess());\n      getQuestions(\"\")(dispatch);\n    })[\"catch\"](function (error) {\n      console.log(error);\n      message.error(error.response.data.message);\n      dispatch(askQuestionFailure());\n    });\n  };\n};\nexport var voteReply = function voteReply(id, type, history) {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n\n  if (!id || !type) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\"); // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n\n  var types = {\n    \"true\": \"upvote\",\n    \"false\": \"downvote\"\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(API_URL, \"reply/\").concat(types[type], \"/\").concat(id), {}, getHeaders()).then(function (response) {\n      var res = response.data;\n      dispatch(editReply(res));\n    })[\"catch\"](function (error) {\n      console.log(error.response);\n\n      if (error.response.status === 401) {\n        Router.push(\"/login\");\n      }\n\n      message.error(error.response.data.message);\n    });\n  };\n};\nexport var addReply = function addReply(data) {\n  data.text = typeof data.text === \"string\" && data.text.trim().length > 0 ? data.text.trim() : false;\n  data.questionId = typeof data.questionId === \"string\" && data.questionId.trim().length > 0 ? data.questionId.trim() : false;\n\n  if (!(data.text && data.questionId)) {\n    return function (dispatch) {\n      message.error(\"Missing Required Fields\");\n      dispatch(askReplyFailure());\n    };\n  }\n\n  var body = {\n    text: data.text,\n    questionId: data.questionId\n  };\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            dispatch(addReplyRequest());\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(API_URL, \"reply/\"), body, getHeaders()));\n\n          case 4:\n            message.success(\"Reply Added Successfully\");\n            dispatch(addReplySuccess());\n            getQuestionById(data.questionId)(dispatch);\n            _context4.next = 14;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n            message.error(_context4.t0.response.data.message);\n            dispatch(addReplyFailure());\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n};","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/redux/question/questionActions.js"],"names":["GET_QUESTIONS_FAILURE","GET_QUESTIONS_REQUEST","GET_QUESTIONS_SUCCESS","GET_QUESTION_DESCRIPTION_FAILURE","GET_QUESTION_DESCRIPTION_REQUEST","GET_QUESTION_DESCRIPTION_SUCCESS","ASK_QUESTION_FAILURE","ASK_QUESTION_SUCCESS","ASK_QUESTION_REQUEST","ADD_REPLY_FAILURE","ADD_REPLY_SUCCESS","ADD_REPLY_REQUEST","EDIT_REPLY","message","API_URL","axios","getHeaders","React","Router","getQuestionRequest","type","getQuestionSuccess","res","payload","getQuestionFailure","err","getCurrentQuestionReq","getCurrentQuestionSuccess","getCurrentQuestionFailure","askQuestionRequest","askQuestionSuccess","askQuestionFailure","addReplyRequest","addReplySuccess","addReplyFailure","editReply","getQuestions","search","pageNo","pageSize","dispatch","get","response","data","error","getQuestionById","id","console","log","length","voteQuestion","history","toString","types","post","then","status","push","askQuestion","title","trim","description","tags","body","voteReply","addReply","text","questionId","askReplyFailure","success"],"mappings":"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","sourcesContent":["import {\n  GET_QUESTIONS_FAILURE,\n  GET_QUESTIONS_REQUEST,\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTION_DESCRIPTION_FAILURE,\n  GET_QUESTION_DESCRIPTION_REQUEST,\n  GET_QUESTION_DESCRIPTION_SUCCESS,\n  ASK_QUESTION_FAILURE,\n  ASK_QUESTION_SUCCESS,\n  ASK_QUESTION_REQUEST,\n  ADD_REPLY_FAILURE,\n  ADD_REPLY_SUCCESS,\n  ADD_REPLY_REQUEST,\n  EDIT_REPLY\n} from \"./questionTypes\";\nimport { message } from \"antd\";\nimport API_URL from \"../helpers/API_URL\";\nimport axios from \"axios\";\nimport { getHeaders } from \"../helpers/getHeaders\";\nimport React from \"react\";\nimport Router from \"next/router\";\nconst getQuestionRequest = () => ({\n  type: GET_QUESTIONS_REQUEST\n});\nconst getQuestionSuccess = res => ({\n  type: GET_QUESTIONS_SUCCESS,\n  payload: res\n});\nconst getQuestionFailure = err => ({\n  type: GET_QUESTIONS_FAILURE,\n  payload: err\n});\n\nconst getCurrentQuestionReq = () => ({\n  type: GET_QUESTION_DESCRIPTION_REQUEST\n});\n\nconst getCurrentQuestionSuccess = res => ({\n  type: GET_QUESTION_DESCRIPTION_SUCCESS,\n  payload: res\n});\n\nconst getCurrentQuestionFailure = err => ({\n  type: GET_QUESTION_DESCRIPTION_FAILURE,\n  payload: err\n});\nconst askQuestionRequest = () => ({\n  type: ASK_QUESTION_REQUEST\n});\nconst askQuestionSuccess = () => ({\n  type: ASK_QUESTION_SUCCESS\n});\nconst askQuestionFailure = () => ({\n  type: ASK_QUESTION_FAILURE\n});\n\nconst addReplyRequest = () => ({\n  type: ADD_REPLY_REQUEST\n});\nconst addReplySuccess = () => ({\n  type: ADD_REPLY_SUCCESS\n});\nconst addReplyFailure = () => ({\n  type: ADD_REPLY_FAILURE\n});\nconst editReply = res => ({\n  type: EDIT_REPLY,\n  payload: res\n});\n\nexport const getQuestions = async (search, pageNo, pageSize) => {\n  search = typeof search === \"string\" ? search : \"\";\n  return async function(dispatch) {\n    dispatch(getQuestionRequest());\n    try {\n      let response = await axios.get(\n        `${API_URL}question/search?search=${search}`\n      );\n      response = response.data;\n\n      return dispatch(getQuestionSuccess(response));\n    } catch (error) {\n      message.error(error.response.data.message);\n      return dispatch(getQuestionFailure(error.message));\n    }\n  };\n};\n\nexport const getQuestionById = id => {\n  console.log(\"hii\");\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  if (!id) {\n    return function(dispatch) {\n      message.error(\"Invalid ID\");\n      dispatch(getCurrentQuestionFailure(\"Invalid ID\"));\n    };\n  }\n  return async function(dispatch) {\n    try {\n      dispatch(getCurrentQuestionReq());\n      let response = await axios.get(`${API_URL}question/search/${id}`);\n      response = response.data;\n      return dispatch(getCurrentQuestionSuccess(response));\n    } catch (error) {\n      console.log(error);\n      message.error(error.response.data.message);\n      dispatch(getCurrentQuestionFailure(error.message));\n      return response;\n    }\n  };\n};\n\nexport const voteQuestion = (id, type, history) => {\n  console.log(id, type);\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n  if (!id || !type) {\n    return function(dispatch) {\n      message.error(\"Missing Required Fields\");\n      // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n  const types = {\n    true: \"upvote\",\n    false: \"downvote\"\n  };\n  return function(dispatch) {\n    axios\n      .post(`${API_URL}question/${types[type]}/${id}`, {}, getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(getCurrentQuestionSuccess(res));\n      })\n      .catch(error => {\n        console.log(error);\n        if (error.response.status === 401) {\n          Router.push(\"/login\");\n        }\n        message.error(error.response.data.message);\n      });\n  };\n};\n\nexport const askQuestion = data => {\n  data.title =\n    typeof data.title === \"string\" && data.title.trim().length > 0\n      ? data.title.trim()\n      : false;\n  data.description =\n    typeof data.description === \"string\" && data.description.trim().length > 0\n      ? data.description.trim()\n      : false;\n  data.tags =\n    Array.isArray(data.tags) && data.tags.length > 0 ? data.tags : false;\n  if (!(data.title && data.description && data.tags)) {\n    return function(dispatch) {\n      dispatch(askQuestionFailure());\n    };\n  }\n\n  const body = {\n    title: data.title,\n    description: data.description,\n    tags: data.tags\n  };\n  return function(dispatch) {\n    dispatch(askQuestionRequest());\n    axios\n      .post(`${API_URL}question/ask`, body, getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(askQuestionSuccess());\n        getQuestions(\"\")(dispatch);\n      })\n      .catch(error => {\n        console.log(error)\n        message.error(error.response.data.message);\n        dispatch(askQuestionFailure());\n      });\n  };\n};\n\nexport const voteReply = (id, type, history) => {\n  id = typeof id === \"string\" && id.length > 0 ? id : false;\n  type = typeof type === \"boolean\" ? type.toString() : false;\n  if (!id || !type) {\n    return function(dispatch) {\n      message.error(\"Missing Required Fields\");\n      // dispatch(getCurrentQuestionFailure(\"Missing Required Fields\"));\n    };\n  }\n  const types = {\n    true: \"upvote\",\n    false: \"downvote\"\n  };\n  return function(dispatch) {\n    axios\n      .post(`${API_URL}reply/${types[type]}/${id}`, {}, getHeaders())\n      .then(response => {\n        const res = response.data;\n        dispatch(editReply(res));\n      })\n      .catch(error => {\n        console.log(error.response);\n        if (error.response.status === 401) {\n          Router.push(\"/login\");\n        }\n        message.error(error.response.data.message);\n      });\n  };\n};\n\nexport const addReply = data => {\n  data.text =\n    typeof data.text === \"string\" && data.text.trim().length > 0\n      ? data.text.trim()\n      : false;\n  data.questionId =\n    typeof data.questionId === \"string\" && data.questionId.trim().length > 0\n      ? data.questionId.trim()\n      : false;\n\n  if (!(data.text && data.questionId)) {\n    return function(dispatch) {\n      message.error(\"Missing Required Fields\");\n      dispatch(askReplyFailure());\n    };\n  }\n\n  const body = {\n    text: data.text,\n    questionId: data.questionId\n  };\n  return async function(dispatch) {\n    try {\n      dispatch(addReplyRequest());\n      await axios.post(`${API_URL}reply/`, body, getHeaders());\n      message.success(\"Reply Added Successfully\");\n      dispatch(addReplySuccess());\n      getQuestionById(data.questionId)(dispatch);\n    } catch (error) {\n      console.log(error)\n      message.error(error.response.data.message);\n      dispatch(addReplyFailure());\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}