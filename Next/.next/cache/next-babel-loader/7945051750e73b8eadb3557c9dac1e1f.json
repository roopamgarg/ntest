{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionById, voteQuestion } from \"../redux/index\";\nimport Link from \"next/link\";\nimport { List, Icon, Avatar, Button, Tag } from \"antd\";\nimport Replies from \"../components/questionDescription/Replies\";\nimport Reply from \"../components/reply/Reply\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\n\nconst IconText = ({\n  type,\n  text\n}) => __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(Icon, {\n  type: type,\n  style: {\n    marginRight: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), text);\n\nclass Question extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const props = this.props;\n      console.log(props.currentQuestion);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        style: {\n          padding: \"0 10%\"\n        },\n        dataSource: props.currentQuestion._id ? [props.currentQuestion] : [],\n        loading: props.currentQuestionLoader,\n        renderItem: item => __jsx(QuestionDescription, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    });\n  }\n\n  static async getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    try {\n      const action = await getQuestionById(query.id);\n      await action(store.dispatch);\n      return {\n        currentQuestion: store.getState().question.currentQuestion\n      };\n    } catch (err) {\n      return {};\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentQuestion: state.question.currentQuestion,\n  currentQuestionLoader: state.question.currentQuestionLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestionById: id => getQuestionById(id)(dispatch),\n    voteQuestion: (id, type) => voteQuestion(id, type)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDescription);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js"],"names":["React","useState","useEffect","Component","connect","getQuestionById","voteQuestion","Link","List","Icon","Avatar","Button","Tag","Replies","Reply","ReactMarkdown","Layout","Router","IconText","type","text","marginRight","Question","props","console","log","currentQuestion","padding","_id","currentQuestionLoader","item","getInitialProps","store","isServer","pathname","query","action","id","dispatch","getState","question","err","mapStateToProps","state","mapDispatchToProps","QuestionDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionById, voteQuestion } from \"../redux/index\";\nimport Link from \"next/link\";\nimport { List, Icon, Avatar, Button, Tag } from \"antd\";\nimport Replies from \"../components/questionDescription/Replies\";\nimport Reply from \"../components/reply/Reply\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nclass Question extends Component {\n \n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      const action = await getQuestionById(query.id);\n      await action(store.dispatch);\n      return { currentQuestion: store.getState().question.currentQuestion };\n    } catch (err) {\n      return {};\n    }\n  }\n  render = () => {\n    const props = this.props;\n    console.log(props.currentQuestion);\n    return (\n      <Layout>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          style={{ padding: \"0 10%\" }}\n          dataSource={props.currentQuestion._id ? [props.currentQuestion] : []}\n          loading={props.currentQuestionLoader}\n          renderItem={item => (\n            <QuestionDescription item={item} />\n\n          )}\n        />\n      </Layout>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  currentQuestion: state.question.currentQuestion,\n  currentQuestionLoader: state.question.currentQuestionLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestionById: id => getQuestionById(id)(dispatch),\n    voteQuestion: (id, type) =>\n      voteQuestion(id, type)(dispatch)\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionDescription);\n"]},"metadata":{},"sourceType":"module"}