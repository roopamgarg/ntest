{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({\n    type\n  }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({\n    type\n  }) => type === false);\n  return upVotes.length;\n};\n\nconst renderTags = tags => {\n  return tags.map(tag => __jsx(Tag, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, tag));\n};\n\nclass Questions extends Component {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const props = this.props;\n    console.log(props);\n    return __jsx(\"div\", {\n      style: {\n        padding: \"0 10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(List, {\n      className: \"demo-loadmore-list\",\n      loading: props.questionsLoader,\n      itemLayout: \"horizontal\" //   loadMore={loadMore}\n      ,\n      dataSource: props.questions,\n      renderItem: (item, index) => __jsx(List.Item, {\n        actions: [__jsx(Link, {\n          to: `/question/${item._id}`,\n          key: \"list-loadmore-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, getUpVotesLength(item.votes), \" Up Votes\"), __jsx(\"a\", {\n          key: \"list-loadmore-more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, getDownVotesLength(item.votes), \" Down Votes\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(Skeleton, {\n        avatar: true,\n        title: false,\n        loading: props.questionsLoader,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          style: {\n            backgroundColor: colorList[index % 4],\n            verticalAlign: \"middle\"\n          },\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, item.creator.displayName[0].toUpperCase()),\n        title: __jsx(Link, {\n          style: {\n            fontSize: \"1.4rem\",\n            margin: \"0 0 0.5rem 0\",\n            display: \"inline-block\"\n          },\n          to: `/question/${item._id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, item.title),\n        description: renderTags(item.tags),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, item.creator.displayName))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        padding: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(AskQuestion, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"Ask Question\")));\n  }\n\n} // Questions.getInitialProps = ({store, isServer, pathname, query}) => {\n//   console.log(store)\n//   return store\n// }\n\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","useEffect","Component","List","Button","Skeleton","Avatar","Tag","connect","getQuestions","Link","AskQuestion","colorList","getUpVotesLength","votes","upVotes","filter","type","length","getDownVotesLength","renderTags","tags","map","tag","Questions","getInitialProps","router","ctx","pageProps","render","props","console","log","padding","questionsLoader","questions","item","index","_id","backgroundColor","verticalAlign","creator","displayName","toUpperCase","fontSize","margin","display","title","mapStateToProps","state","question","mapDispatchToProps","dispatch","search","message"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === false);\n  return upVotes.length;\n};\n\nconst renderTags = tags => {\n  return tags.map(tag => <Tag color=\"blue\">{tag}</Tag>);\n};\nclass Questions extends Component {\n    static async getInitialProps({ Component, router, ctx }) {\n        let pageProps = {}\n      \n        if (Component.getInitialProps) {\n          pageProps = await Component.getInitialProps(ctx)\n        }\n      \n        return { pageProps }\n      }\n  render() {\n      const props = this.props;\n      console.log(props)\n    return (\n      <div style={{ padding: \"0 10%\" }}>\n        <List\n          className=\"demo-loadmore-list\"\n          loading={props.questionsLoader}\n          itemLayout=\"horizontal\"\n        //   loadMore={loadMore}\n          dataSource={props.questions}\n          renderItem={(item, index) => (\n            <List.Item\n              actions={[\n                <Link to={`/question/${item._id}`} key=\"list-loadmore-edit\">\n                  {getUpVotesLength(item.votes)} Up Votes\n                </Link>,\n                <a key=\"list-loadmore-more\">\n                  {getDownVotesLength(item.votes)} Down Votes\n                </a>\n              ]}\n            >\n              <Skeleton\n                avatar\n                title={false}\n                loading={props.questionsLoader}\n                active\n              >\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      style={{\n                        backgroundColor: colorList[index % 4],\n                        verticalAlign: \"middle\"\n                      }}\n                      size=\"large\"\n                    >\n                      {item.creator.displayName[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <Link\n                      style={{\n                        fontSize: \"1.4rem\",\n                        margin: \"0 0 0.5rem 0\",\n                        display: \"inline-block\"\n                      }}\n                      to={`/question/${item._id}`}\n                    >\n                      {item.title}\n                    </Link>\n                  }\n                  description={renderTags(item.tags)}\n                />\n                <div>{item.creator.displayName}</div>\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n        <div style={{ padding: \"2rem\" }}>\n          <AskQuestion {...props}>Ask Question</AskQuestion>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Questions.getInitialProps = ({store, isServer, pathname, query}) => {\n//   console.log(store)\n//   return store\n// }\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}