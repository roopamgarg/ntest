{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"antd\";\nimport Layout from \"../components/layout/Layout\";\nimport QuestionDescription from \"../components/questionDescription/QuestionDescription\";\nimport { getQuestionById as _getQuestionById, voteQuestion as _voteQuestion } from \"../redux/index\";\n\nvar QuestionDescriptionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionDescriptionPage, _Component);\n\n  function QuestionDescriptionPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionDescriptionPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionDescriptionPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var props = _this.props;\n      console.log(props.currentQuestion);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        style: {\n          padding: \"0 10%\"\n        },\n        dataSource: props.currentQuestion._id ? [props.currentQuestion] : [],\n        loading: props.currentQuestionLoader,\n        renderItem: function renderItem(item) {\n          return __jsx(QuestionDescription, _extends({\n            item: item\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(QuestionDescriptionPage, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref.store, query = _ref.query;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_getQuestionById(query.id));\n\n            case 4:\n              action = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                currentQuestion: store.getState().question.currentQuestion\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }]);\n\n  return QuestionDescriptionPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.question.currentQuestion,\n    currentQuestionLoader: state.question.currentQuestionLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestionById: function getQuestionById(id) {\n      return _getQuestionById(id)(dispatch);\n    },\n    voteQuestion: function voteQuestion(id, type) {\n      return _voteQuestion(id, type)(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDescriptionPage);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js"],"names":["React","Component","connect","List","Layout","QuestionDescription","getQuestionById","voteQuestion","QuestionDescriptionPage","props","console","log","currentQuestion","padding","_id","currentQuestionLoader","item","store","query","id","action","dispatch","getState","question","mapStateToProps","state","mapDispatchToProps","type"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AAEA,SAASC,eAAe,IAAfA,gBAAT,EAA0BC,YAAY,IAAZA,aAA1B,QAA8C,gBAA9C;;IAGMC,uB;;;;;;;;;;;;;;;;;;6DAUK,YAAM;AACb,UAAMC,KAAK,GAAG,MAAKA,KAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,eAAlB;AACA,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AACE,QAAA,UAAU,EAAC,UADb;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAHT;AAIE,QAAA,UAAU,EAAEJ,KAAK,CAACG,eAAN,CAAsBE,GAAtB,GAA4B,CAACL,KAAK,CAACG,eAAP,CAA5B,GAAsD,EAJpE;AAKE,QAAA,OAAO,EAAEH,KAAK,CAACM,qBALjB;AAME,QAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,iBAAI,MAAC,mBAAD;AAAqB,YAAA,IAAI,EAAEA;AAA3B,aAAqCP,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD,K;;;;;;;;;;;;;AAxB8BQ,cAAAA,K,QAAAA,K,EAAOC,K,QAAAA,K;;;+CAEbZ,gBAAe,CAACY,KAAK,CAACC,EAAP,C;;;AAA9BC,cAAAA,M;;+CACAA,MAAM,CAACH,KAAK,CAACI,QAAP,C;;;+CACL;AAAET,gBAAAA,eAAe,EAAEK,KAAK,CAACK,QAAN,GAAiBC,QAAjB,CAA0BX;AAA7C,e;;;;;+CAEA,E;;;;;;;;;;;;EAPyBX,S;;AA2BtC,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCb,IAAAA,eAAe,EAAEa,KAAK,CAACF,QAAN,CAAeX,eADA;AAEhCG,IAAAA,qBAAqB,EAAEU,KAAK,CAACF,QAAN,CAAeR;AAFN,GAAL;AAAA,CAA7B;;AAKA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAL,QAAQ,EAAI;AACrC,SAAO;AACLf,IAAAA,eAAe,EAAE,yBAAAa,EAAE;AAAA,aAAIb,gBAAe,CAACa,EAAD,CAAf,CAAoBE,QAApB,CAAJ;AAAA,KADd;AAELd,IAAAA,YAAY,EAAE,sBAACY,EAAD,EAAKQ,IAAL;AAAA,aAAcpB,aAAY,CAACY,EAAD,EAAKQ,IAAL,CAAZ,CAAuBN,QAAvB,CAAd;AAAA;AAFT,GAAP;AAID,CALD;;AAMA,eAAenB,OAAO,CACpBsB,eADoB,EAEpBE,kBAFoB,CAAP,CAGblB,uBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"antd\";\n\nimport Layout from \"../components/layout/Layout\";\nimport QuestionDescription from \"../components/questionDescription/QuestionDescription\";\n\nimport { getQuestionById, voteQuestion } from \"../redux/index\";\n\n\nclass QuestionDescriptionPage extends Component {\n  static async getInitialProps({ store, query }) {\n    try {\n      const action = await getQuestionById(query.id);\n      await action(store.dispatch);\n      return { currentQuestion: store.getState().question.currentQuestion };\n    } catch (err) {\n      return {};\n    }\n  }\n  render = () => {\n    const props = this.props;\n    console.log(props.currentQuestion);\n    return (\n      <Layout>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          style={{ padding: \"0 10%\" }}\n          dataSource={props.currentQuestion._id ? [props.currentQuestion] : []}\n          loading={props.currentQuestionLoader}\n          renderItem={item => <QuestionDescription item={item} {...props} />}\n        />\n      </Layout>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  currentQuestion: state.question.currentQuestion,\n  currentQuestionLoader: state.question.currentQuestionLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestionById: id => getQuestionById(id)(dispatch),\n    voteQuestion: (id, type) => voteQuestion(id, type)(dispatch)\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionDescriptionPage);\n"]},"metadata":{},"sourceType":"module"}