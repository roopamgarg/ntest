{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser } from \"../redux/index\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\nimport Link from \"next/link\";\nimport cookie from \"react-cookies\";\nimport Router, { useRouter } from 'next/router';\n\nfunction LoginForm(props) {\n  const router = useRouter();\n  useEffect(() => {\n    if (cookie.load('token')) {\n      return Router.push('/', '/', {\n        shallow: true\n      });\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        props.loginUser(values, props.history, message);\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(\"div\", {\n    className: \"register__form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      required: true,\n      message: \"Please input your username!\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"Please input your Password!\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"lock\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    loading: props.loginLoader,\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Log in\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \"Or \", __jsx(Link, {\n    href: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"register now!\")))));\n}\n\nconst WrappedLoginForm = Form.create({\n  name: \"login_form\"\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  loginLoader: state.user.loginLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (data, history, message) => loginUser(data, history, message)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginForm);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/login.js"],"names":["React","useEffect","Form","Icon","Input","Button","Checkbox","loginUser","connect","message","Link","cookie","Router","useRouter","LoginForm","props","router","load","push","shallow","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","history","getFieldDecorator","rules","required","color","loginLoader","WrappedLoginForm","create","name","mapStateToProps","state","user","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser } from \"../redux/index\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\nimport  Link from \"next/link\";\nimport cookie from \"react-cookies\";\nimport  Router, { useRouter } from 'next/router';\n\nfunction LoginForm(props) {\n  const router = useRouter()\n  useEffect(()=>{\n    if(cookie.load('token')){\n      return Router.push('/','/', { shallow: true })\n    }\n  },[])\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        props.loginUser(values, props.history, message);\n      }\n    });\n  };\n  const { getFieldDecorator } = props.form;\n  return (\n    <div className=\"register__form-container\">\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator(\"email\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            loading={props.loginLoader}\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n          <br />\n          Or <Link href=\"/register\"><a>register now!</a></Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nconst WrappedLoginForm = Form.create({ name: \"login_form\" })(LoginForm);\nconst mapStateToProps = state => ({\n  loginLoader: state.user.loginLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (data, history, message) =>\n      loginUser(data, history, message)(dispatch)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginForm);\n"]},"metadata":{},"sourceType":"module"}