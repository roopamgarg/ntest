{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionById as _getQuestionById, voteQuestion as _voteQuestion } from \"../redux/index\";\nimport Link from \"next/link\";\nimport { List, Icon, Avatar, Button, Tag } from \"antd\";\nimport Replies from \"../components/questionDescription/Replies\";\nimport Reply from \"../components/reply/Reply\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\n\nvar IconText = function IconText(_ref) {\n  var type = _ref.type,\n      text = _ref.text;\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: type,\n    style: {\n      marginRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), text);\n};\n\nvar getUpVotesLength = function getUpVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === true;\n  });\n  return upVotes.length;\n};\n\nvar getDownVotesLength = function getDownVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref3) {\n    var type = _ref3.type;\n    return type === false;\n  });\n  return upVotes.length;\n};\n\nvar renderTags = function renderTags(tags) {\n  return tags.map(function (tag) {\n    return __jsx(Tag, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, tag);\n  });\n};\n\nvar QuestionDescription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionDescription, _Component);\n\n  function QuestionDescription() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionDescription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionDescription)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var props = _this.props;\n      console.log(props.currentQuestion);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        style: {\n          padding: \"0 10%\"\n        },\n        dataSource: props.currentQuestion._id ? [props.currentQuestion] : [],\n        loading: props.currentQuestionLoader,\n        renderItem: function renderItem(item) {\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, __jsx(List.Item, {\n            key: item._id,\n            actions: [__jsx(Button, {\n              onClick: function onClick() {\n                return props.voteQuestion(item._id, true, props.history);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, __jsx(IconText, {\n              type: \"up\",\n              text: getUpVotesLength(item.votes),\n              key: \"list-vertical-star-o\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            })), __jsx(Button, {\n              onClick: function onClick() {\n                return props.voteQuestion(item._id, false, props.history);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, __jsx(IconText, {\n              type: \"down\",\n              text: getDownVotesLength(item.votes),\n              key: \"list-vertical-like-o\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            })), __jsx(Button, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, __jsx(IconText, {\n              type: \"message\",\n              text: item.replies.length,\n              key: \"list-vertical-message\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            })), __jsx(Reply, _extends({\n              questionId: item._id\n            }, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }), \"Add Reply\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, __jsx(List.Item.Meta, {\n            avatar: __jsx(Avatar, {\n              style: {\n                backgroundColor: \"#f56a00\",\n                verticalAlign: \"middle\"\n              },\n              size: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, item.creator.displayName[0].toUpperCase(), \" \"),\n            title: __jsx(\"a\", {\n              href: item.href,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, item.title),\n            description: renderTags(item.tags),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }), __jsx(ReactMarkdown, {\n            source: item.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          })), __jsx(Replies, _extends({\n            replies: item.replies\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(QuestionDescription, null, [{\n    key: \"getInitialProps\",\n    // useEffect(() => {\n    //   props.getQuestionById(props.match.params.id);\n    // }, []);\n    // componentDidMount = () => {\n    //   this.props.getQuestionById(Router.params.id);\n    // }\n    value: function getInitialProps(_ref4) {\n      var store, isServer, pathname, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref4.store, isServer = _ref4.isServer, pathname = _ref4.pathname, query = _ref4.query;\n              _context.prev = 1;\n              console.log(query.id);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_getQuestionById(query.id));\n\n            case 5:\n              action = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 8:\n              console.log(store.getState());\n              return _context.abrupt(\"return\", {\n                currentQuestion: store.getState().question.currentQuestion\n              });\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 12]]);\n    }\n  }]);\n\n  return QuestionDescription;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.question.currentQuestion,\n    currentQuestionLoader: state.question.currentQuestionLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestionById: function getQuestionById(id) {\n      return _getQuestionById(id)(dispatch);\n    },\n    voteQuestion: function voteQuestion(id, type, history) {\n      return _voteQuestion(id, type, history)(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDescription);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/[id].js"],"names":["React","useState","useEffect","Component","connect","getQuestionById","voteQuestion","Link","List","Icon","Avatar","Button","Tag","Replies","Reply","ReactMarkdown","Layout","Router","IconText","type","text","marginRight","getUpVotesLength","votes","upVotes","filter","length","getDownVotesLength","renderTags","tags","map","tag","QuestionDescription","props","console","log","currentQuestion","padding","_id","currentQuestionLoader","item","history","replies","backgroundColor","verticalAlign","creator","displayName","toUpperCase","href","title","description","store","isServer","pathname","query","id","action","dispatch","getState","question","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionById, voteQuestion } from \"../redux/index\";\nimport Link from \"next/link\";\nimport { List, Icon, Avatar, Button, Tag } from \"antd\";\nimport Replies from \"../components/questionDescription/Replies\";\nimport Reply from \"../components/reply/Reply\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === false);\n  return upVotes.length;\n};\nconst renderTags = tags => {\n  return tags.map(tag => <Tag color=\"blue\">{tag}</Tag>);\n};\nclass QuestionDescription extends Component {\n  // useEffect(() => {\n  //   props.getQuestionById(props.match.params.id);\n  // }, []);\n  // componentDidMount = () => {\n  //   this.props.getQuestionById(Router.params.id);\n  // }\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      console.log(query.id);\n      const action = await getQuestionById(query.id);\n\n      await action(store.dispatch);\n      console.log(store.getState());\n      return { currentQuestion: store.getState().question.currentQuestion };\n    } catch (err) {\n      return {};\n    }\n  }\n  render = () => {\n    const props = this.props;\n    console.log(props.currentQuestion);\n    return (\n      <Layout>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          style={{ padding: \"0 10%\" }}\n          dataSource={props.currentQuestion._id ? [props.currentQuestion] : []}\n          loading={props.currentQuestionLoader}\n          renderItem={item => (\n            <div>\n              <List.Item\n                key={item._id}\n                actions={[\n                  <Button\n                    onClick={() =>\n                      props.voteQuestion(item._id, true, props.history)\n                    }\n                  >\n                    <IconText\n                      type=\"up\"\n                      text={getUpVotesLength(item.votes)}\n                      key=\"list-vertical-star-o\"\n                    />\n                  </Button>,\n                  <Button\n                    onClick={() =>\n                      props.voteQuestion(item._id, false, props.history)\n                    }\n                  >\n                    <IconText\n                      type=\"down\"\n                      text={getDownVotesLength(item.votes)}\n                      key=\"list-vertical-like-o\"\n                    />\n                  </Button>,\n                  <Button>\n                    <IconText\n                      type=\"message\"\n                      text={item.replies.length}\n                      key=\"list-vertical-message\"\n                    />\n                  </Button>,\n                  <Reply questionId={item._id} {...props}>\n                    Add Reply\n                  </Reply>\n                ]}\n              >\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      style={{\n                        backgroundColor: \"#f56a00\",\n                        verticalAlign: \"middle\"\n                      }}\n                      size=\"large\"\n                    >\n                      {item.creator.displayName[0].toUpperCase()}{\" \"}\n                    </Avatar>\n                  }\n                  title={<a href={item.href}>{item.title}</a>}\n                  description={renderTags(item.tags)}\n                />\n                <ReactMarkdown source={item.description} />\n              </List.Item>\n              <Replies replies={item.replies} {...props} />\n            </div>\n          )}\n        />\n      </Layout>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  currentQuestion: state.question.currentQuestion,\n  currentQuestionLoader: state.question.currentQuestionLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestionById: id => getQuestionById(id)(dispatch),\n    voteQuestion: (id, type, history) =>\n      voteQuestion(id, type, history)(dispatch)\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionDescription);\n"]},"metadata":{},"sourceType":"module"}