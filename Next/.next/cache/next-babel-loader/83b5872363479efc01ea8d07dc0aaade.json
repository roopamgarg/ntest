{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form, Input, Icon, Select } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport { askQuestion } from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\n\nfunction AskQuestion(props) {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n\n  const showModal = () => {\n    if (!cookie.load('token')) {\n      Router.push('/login');\n      return setVisible(false);\n    }\n\n    setVisible(true);\n  };\n\n  const handleOk = async e => {\n    console.log(e);\n    await props.askQuestion({\n      title,\n      description,\n      tags\n    });\n    setDescription(\"\");\n    setTitle(\"\");\n    setTags([]);\n    setVisible(false);\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  const handleTagChange = val => {\n    setTags(val);\n  };\n\n  return __jsx(\"div\", null, __jsx(Button, {\n    type: \"primary\",\n    onClick: showModal\n  }, props.children), __jsx(Modal, {\n    title: \"Ask A Question\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel\n  }, __jsx(Form, {\n    className: \"login-form\"\n  }, __jsx(Form.Item, null, __jsx(Input, {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Title\"\n  })), __jsx(ReactMarkdown, {\n    source: description\n  }), __jsx(Form.Item, null, __jsx(TextArea, {\n    placeholder: \"Enter Your Question Description( Mark Down Supported)\",\n    autoSize: {\n      minRows: 2\n    },\n    value: description,\n    onChange: e => setDescription(e.target.value)\n  })), __jsx(Form.Item, null, __jsx(Select, {\n    mode: \"tags\",\n    style: {\n      width: \"100%\"\n    },\n    tokenSeparators: [\",\"],\n    value: tags,\n    onChange: handleTagChange\n  })))));\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    askQuestion: data => askQuestion(data)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AskQuestion);","map":null,"metadata":{},"sourceType":"module"}