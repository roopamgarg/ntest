{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/register.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser, registerUser } from '../redux/index';\nimport { connect } from \"react-redux\";\nimport { message } from 'antd';\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\n\nfunction RegisterForm(props) {\n  if (cookie.load('token')) {\n    return Router.push('/');\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        props.registerUser(values, props.history, message);\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(\"div\", {\n    className: \"login__form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, getFieldDecorator(\"displayName\", {\n    rules: [{\n      required: true,\n      message: \"Please input your display name!\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    placeholder: \"Dispaly Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      required: true,\n      message: \"Please input your email!\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"mail\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"Please input your Password!\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"lock\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    loading: props.registerLoader,\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Register\"))));\n}\n\nconst WrappedRegisterForm = Form.create({\n  name: \"register_form\"\n})(RegisterForm);\n\nconst mapStateToProps = state => ({\n  registerLoader: state.user.registerLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (data, history, message) => dispatch(loginUser(data, history, message)),\n    registerUser: (data, history, message) => dispatch(registerUser(data, history, message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterForm);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/register.js"],"names":["React","useEffect","Form","Icon","Input","Button","Checkbox","loginUser","registerUser","connect","message","cookie","Router","RegisterForm","props","load","push","handleSubmit","e","preventDefault","form","validateFields","err","values","history","getFieldDecorator","rules","required","color","registerLoader","WrappedRegisterForm","create","name","mapStateToProps","state","user","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { loginUser, registerUser } from '../redux/index';\nimport { connect } from \"react-redux\";\nimport { message } from 'antd';\nimport cookie from \"react-cookies\";\nimport  Router from 'next/router';\n\nfunction RegisterForm(props) {\n    if(cookie.load('token')){\n        return Router.push('/')\n      }\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        props.registerUser(values,props.history,message)\n      }\n    });\n  };\n  const { getFieldDecorator } = props.form;\n  return (\n      <div className=\"login__form-container\">\n    <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n        {getFieldDecorator(\"displayName\", {\n          rules: [{ required: true, message: \"Please input your display name!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Dispaly Name\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator(\"email\", {\n          rules: [{ required: true, message: \"Please input your email!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Email\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator(\"password\", {\n          rules: [{ required: true, message: \"Please input your Password!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n      \n        \n        <Button type=\"primary\" loading={props.registerLoader} htmlType=\"submit\" className=\"login-form-button\">\n            Register\n        </Button>\n        \n      </Form.Item>\n    </Form>\n    </div>\n  );\n}\nconst WrappedRegisterForm = Form.create({ name: \"register_form\" })(\n  RegisterForm\n);\n\n\nconst mapStateToProps = state => ({\n  registerLoader:state.user.registerLoader\n});\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      loginUser: (data,history,message) => dispatch(loginUser(data,history,message)),\n      registerUser: (data,history,message) => dispatch(registerUser(data,history,message)),\n\n    };\n  };\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterForm);\n"]},"metadata":{},"sourceType":"module"}