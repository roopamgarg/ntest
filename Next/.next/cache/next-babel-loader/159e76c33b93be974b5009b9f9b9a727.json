{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions as _getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nvar colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nvar getUpVotesLength = function getUpVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref) {\n    var type = _ref.type;\n    return type === true;\n  });\n  return upVotes.length;\n};\n\nvar getDownVotesLength = function getDownVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === false;\n  });\n  return upVotes.length;\n};\n\nvar renderTags = function renderTags(tags) {\n  return tags.map(function (tag) {\n    return __jsx(Tag, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, tag);\n  });\n};\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions() {\n    _classCallCheck(this, Questions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Questions).apply(this, arguments));\n  }\n\n  _createClass(Questions, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      console.log(props);\n      return __jsx(\"div\", {\n        style: {\n          padding: \"0 10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(List, {\n        className: \"demo-loadmore-list\",\n        loading: props.questionsLoader,\n        itemLayout: \"horizontal\" //   loadMore={loadMore}\n        ,\n        dataSource: props.questions,\n        renderItem: function renderItem(item, index) {\n          return __jsx(List.Item, {\n            actions: [__jsx(Link, {\n              to: \"/question/\".concat(item._id),\n              key: \"list-loadmore-edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, getUpVotesLength(item.votes), \" Up Votes\"), __jsx(\"a\", {\n              key: \"list-loadmore-more\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, getDownVotesLength(item.votes), \" Down Votes\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, __jsx(Skeleton, {\n            avatar: true,\n            title: false,\n            loading: props.questionsLoader,\n            active: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, __jsx(List.Item.Meta, {\n            avatar: __jsx(Avatar, {\n              style: {\n                backgroundColor: colorList[index % 4],\n                verticalAlign: \"middle\"\n              },\n              size: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, item.creator.displayName[0].toUpperCase()),\n            title: __jsx(Link, {\n              style: {\n                fontSize: \"1.4rem\",\n                margin: \"0 0 0.5rem 0\",\n                display: \"inline-block\"\n              },\n              to: \"/question/\".concat(item._id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, item.title),\n            description: renderTags(item.tags),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, item.creator.displayName)));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          padding: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(AskQuestion, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), \"Ask Question\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref3) {\n      var store = _ref3.store,\n          isServer = _ref3.isServer,\n          pathname = _ref3.pathname,\n          query = _ref3.query;\n      var pageProps = {};\n      console.log(data); // if (Component.getInitialProps) {\n      //   pageProps = await Component.getInitialProps(ctx)\n      // }\n\n      return {\n        store: store,\n        isServer: isServer,\n        pathname: pathname,\n        query: query\n      };\n    }\n  }]);\n\n  return Questions;\n}(Component); // Questions.getInitialProps = ({store, isServer, pathname, query}) => {\n//   console.log(store)\n//   return store\n// }\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.question.questions,\n    questionsLoader: state.question.questionsLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(search, message) {\n      return dispatch(_getQuestions(search, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","useEffect","Component","List","Button","Skeleton","Avatar","Tag","connect","getQuestions","Link","AskQuestion","colorList","getUpVotesLength","votes","upVotes","filter","type","length","getDownVotesLength","renderTags","tags","map","tag","Questions","props","console","log","padding","questionsLoader","questions","item","index","_id","backgroundColor","verticalAlign","creator","displayName","toUpperCase","fontSize","margin","display","title","store","isServer","pathname","query","pageProps","data","mapStateToProps","state","question","mapDispatchToProps","dispatch","search","message"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === false);\n  return upVotes.length;\n};\n\nconst renderTags = tags => {\n  return tags.map(tag => <Tag color=\"blue\">{tag}</Tag>);\n};\nclass Questions extends Component {\n    static getInitialProps({store, isServer, pathname, query}) {\n        let pageProps = {}\n       console.log(data)\n      \n        // if (Component.getInitialProps) {\n        //   pageProps = await Component.getInitialProps(ctx)\n        // }\n      \n        return {store,isServer,pathname,query}\n      }\n  render() {\n      const props = this.props;\n      console.log(props)\n    return (\n      <div style={{ padding: \"0 10%\" }}>\n        <List\n          className=\"demo-loadmore-list\"\n          loading={props.questionsLoader}\n          itemLayout=\"horizontal\"\n        //   loadMore={loadMore}\n          dataSource={props.questions}\n          renderItem={(item, index) => (\n            <List.Item\n              actions={[\n                <Link to={`/question/${item._id}`} key=\"list-loadmore-edit\">\n                  {getUpVotesLength(item.votes)} Up Votes\n                </Link>,\n                <a key=\"list-loadmore-more\">\n                  {getDownVotesLength(item.votes)} Down Votes\n                </a>\n              ]}\n            >\n              <Skeleton\n                avatar\n                title={false}\n                loading={props.questionsLoader}\n                active\n              >\n                <List.Item.Meta\n                  avatar={\n                    <Avatar\n                      style={{\n                        backgroundColor: colorList[index % 4],\n                        verticalAlign: \"middle\"\n                      }}\n                      size=\"large\"\n                    >\n                      {item.creator.displayName[0].toUpperCase()}\n                    </Avatar>\n                  }\n                  title={\n                    <Link\n                      style={{\n                        fontSize: \"1.4rem\",\n                        margin: \"0 0 0.5rem 0\",\n                        display: \"inline-block\"\n                      }}\n                      to={`/question/${item._id}`}\n                    >\n                      {item.title}\n                    </Link>\n                  }\n                  description={renderTags(item.tags)}\n                />\n                <div>{item.creator.displayName}</div>\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n        <div style={{ padding: \"2rem\" }}>\n          <AskQuestion {...props}>Ask Question</AskQuestion>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Questions.getInitialProps = ({store, isServer, pathname, query}) => {\n//   console.log(store)\n//   return store\n// }\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}