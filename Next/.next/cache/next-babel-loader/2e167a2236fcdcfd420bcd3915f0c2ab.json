{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require(\"./questionTypes\"),\n    GET_QUESTIONS_FAILURE = _require.GET_QUESTIONS_FAILURE,\n    GET_QUESTIONS_REQUEST = _require.GET_QUESTIONS_REQUEST,\n    GET_QUESTIONS_SUCCESS = _require.GET_QUESTIONS_SUCCESS,\n    GET_QUESTION_DESCRIPTION_FAILURE = _require.GET_QUESTION_DESCRIPTION_FAILURE,\n    GET_QUESTION_DESCRIPTION_REQUEST = _require.GET_QUESTION_DESCRIPTION_REQUEST,\n    GET_QUESTION_DESCRIPTION_SUCCESS = _require.GET_QUESTION_DESCRIPTION_SUCCESS,\n    ASK_QUESTION_REQUEST = _require.ASK_QUESTION_REQUEST,\n    ASK_QUESTION_SUCCESS = _require.ASK_QUESTION_SUCCESS,\n    ASK_QUESTION_FAILURE = _require.ASK_QUESTION_FAILURE,\n    ADD_REPLY_REQUEST = _require.ADD_REPLY_REQUEST,\n    ADD_REPLY_SUCCESS = _require.ADD_REPLY_SUCCESS,\n    ADD_REPLY_FAILURE = _require.ADD_REPLY_FAILURE,\n    EDIT_REPLY = _require.EDIT_REPLY;\n\nvar initialState = {\n  questions: [],\n  questionsLoader: false,\n  getQuestionsFailure: null,\n  currentQuestion: {},\n  currentQuestionLoader: false,\n  currentQuestionFailure: null,\n  askQuestionLoader: false,\n  addQuestionLoader: false\n};\n\nvar questionReducer = function questionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_QUESTIONS_REQUEST:\n      return _objectSpread({}, state, {\n        questionsLoader: true,\n        getQuestionsFailure: null\n      });\n\n    case GET_QUESTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        questions: action.payload,\n        questionsLoader: false,\n        getQuestionsFailure: null\n      });\n\n    case GET_QUESTIONS_FAILURE:\n      return _objectSpread({}, state, {\n        questionsLoader: false,\n        getQuestionsFailure: action.payload\n      });\n\n    case GET_QUESTION_DESCRIPTION_REQUEST:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: true,\n        currentQuestionFailure: null\n      });\n\n    case GET_QUESTION_DESCRIPTION_SUCCESS:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: false,\n        currentQuestion: action.payload\n      });\n\n    case GET_QUESTION_DESCRIPTION_FAILURE:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: false,\n        currentQuestionFailure: action.payload\n      });\n\n    case ASK_QUESTION_REQUEST:\n      return _objectSpread({}, state, {\n        askQuestionLoader: true\n      });\n\n    case ASK_QUESTION_SUCCESS:\n      return _objectSpread({}, state, {\n        askQuestionLoader: false\n      });\n\n    case ASK_QUESTION_FAILURE:\n      return _objectSpread({}, state, {\n        askQuestionLoader: false\n      });\n\n    case ADD_REPLY_REQUEST:\n      return _objectSpread({}, state, {\n        addQuestionLoader: true\n      });\n\n    case ADD_REPLY_SUCCESS:\n      return _objectSpread({}, state, {\n        addQuestionLoader: false\n      });\n\n    case ADD_REPLY_FAILURE:\n      return _objectSpread({}, state, {\n        addQuestionLoader: false\n      });\n\n    case EDIT_REPLY:\n      var index = state.currentQuestion.replies.findIndex(function (_ref) {\n        var _id = _ref._id;\n        return _id === action.payload._id;\n      });\n      console.log(state);\n      var question = state.currentQuestion;\n      question.replies[index] = action.payload;\n      return _objectSpread({}, state, {\n        currentQuestion: _objectSpread({}, question)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;","map":null,"metadata":{},"sourceType":"module"}