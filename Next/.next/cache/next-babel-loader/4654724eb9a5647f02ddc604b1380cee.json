{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\nimport Link from \"next/link\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\nimport Layout from \"../components/layout/Layout\";\nimport LoginForm from \"../components/forms/LoginForm\";\nimport { loginUser as _loginUser } from \"../redux/index\";\n\nfunction LoginPage(props) {\n  useEffect(function () {\n    if (cookie.load('token')) {\n      return Router.push('/', '/', {\n        shallow: true\n      });\n    }\n  }, []);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(function _callee(err, values) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (err) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.prev = 1;\n              console.log(\"Received values of form: \", values);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(props.loginUser(values, message));\n\n            case 5:\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 7]]);\n    });\n  };\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"login__form-container\"\n  }, __jsx(LoginForm, {\n    getFieldDecorator: getFieldDecorator,\n    loginLoader: props.loginLoader,\n    handleSubmit: handleSubmit\n  })));\n}\n\nvar WrappedLoginForm = Form.create({\n  name: \"login_form\"\n})(LoginPage);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginLoader: state.user.loginLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser(data, message) {\n      return _loginUser(data, message)(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginForm);","map":null,"metadata":{},"sourceType":"module"}