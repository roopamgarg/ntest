{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions as _getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nvar colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nvar getUpVotesLength = function getUpVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref) {\n    var type = _ref.type;\n    return type === true;\n  });\n  return upVotes.length;\n};\n\nvar getDownVotesLength = function getDownVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === false;\n  });\n  return upVotes.length;\n};\n\nvar renderTags = function renderTags(tags) {\n  return tags.map(function (tag) {\n    return __jsx(Tag, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, tag);\n  });\n};\n\nfunction Questions(props) {\n  //   useEffect(() => {\n  //     props.getQuestions(\"\");\n  //   }, []);\n  var getInitialProps = function getInitialProps(_ref3) {\n    var store = _ref3.store,\n        isServer = _ref3.isServer,\n        pathname = _ref3.pathname,\n        query = _ref3.query;\n    store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    }); // component will be able to read from store's state when rendered\n\n    return {\n      custom: 'custom'\n    }; // you can pass some custom props to component from here\n  };\n\n  var loadMore = function loadMore() {\n    props.getQuestions(\"\");\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      padding: \"0 10%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(List, {\n    className: \"demo-loadmore-list\",\n    loading: props.questionsLoader,\n    itemLayout: \"horizontal\",\n    loadMore: loadMore,\n    dataSource: props.questions,\n    renderItem: function renderItem(item, index) {\n      return __jsx(List.Item, {\n        actions: [__jsx(Link, {\n          to: \"/question/\".concat(item._id),\n          key: \"list-loadmore-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, getUpVotesLength(item.votes), \" Up Votes\"), __jsx(\"a\", {\n          key: \"list-loadmore-more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, getDownVotesLength(item.votes), \" Down Votes\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(Skeleton, {\n        avatar: true,\n        title: false,\n        loading: props.questionsLoader,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          style: {\n            backgroundColor: colorList[index % 4],\n            verticalAlign: \"middle\"\n          },\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, item.creator.displayName[0].toUpperCase()),\n        title: __jsx(Link, {\n          style: {\n            fontSize: \"1.4rem\",\n            margin: \"0 0 0.5rem 0\",\n            display: \"inline-block\"\n          },\n          to: \"/question/\".concat(item._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.title),\n        description: renderTags(item.tags),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, item.creator.displayName)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(AskQuestion, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"Ask Question\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.question.questions,\n    questionsLoader: state.question.questionsLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(search, message) {\n      return dispatch(_getQuestions(search, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","useEffect","List","Button","Skeleton","Avatar","Tag","connect","getQuestions","Link","AskQuestion","colorList","getUpVotesLength","votes","upVotes","filter","type","length","getDownVotesLength","renderTags","tags","map","tag","Questions","props","getInitialProps","store","isServer","pathname","query","dispatch","payload","custom","loadMore","padding","questionsLoader","questions","item","index","_id","backgroundColor","verticalAlign","creator","displayName","toUpperCase","fontSize","margin","display","title","mapStateToProps","state","question","mapDispatchToProps","search","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport { Link } from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === false);\n  return upVotes.length;\n};\n\nconst renderTags = (tags) => {\n  return tags.map(tag =>  <Tag color=\"blue\">{tag}</Tag>)\n}\nfunction Questions(props) {\n//   useEffect(() => {\n//     props.getQuestions(\"\");\n//   }, []);\nconst getInitialProps = ({store, isServer, pathname, query}) => {\n    store.dispatch({type: 'FOO', payload: 'foo'}); // component will be able to read from store's state when rendered\n    return {custom: 'custom'}; // you can pass some custom props to component from here\n}\n  const loadMore = () => {\n    props.getQuestions(\"\");\n  };\n\n  return (\n    <div style={{ padding: \"0 10%\" }}>\n      <List\n        className=\"demo-loadmore-list\"\n        loading={props.questionsLoader}\n        itemLayout=\"horizontal\"\n        loadMore={loadMore}\n        dataSource={props.questions}\n        renderItem={(item,index) => (\n          <List.Item\n            actions={[\n              <Link to={`/question/${item._id}`} key=\"list-loadmore-edit\">\n                {getUpVotesLength(item.votes)} Up Votes\n              </Link>,\n              <a key=\"list-loadmore-more\">\n                {getDownVotesLength(item.votes)} Down Votes\n              </a>\n            ]}\n          >\n            <Skeleton\n              avatar\n              title={false}\n              loading={props.questionsLoader}\n              active\n            >\n              <List.Item.Meta\n                avatar={\n                  <Avatar\n                    style={{\n                      backgroundColor: colorList[index % 4],\n                      verticalAlign: \"middle\"\n                    }}\n                    size=\"large\"\n                  >\n                    {item.creator.displayName[0].toUpperCase()}\n                  </Avatar>\n                }\n                title={<Link style={{fontSize:\"1.4rem\",margin:\"0 0 0.5rem 0\",display:\"inline-block\"}} to={`/question/${item._id}`}>{item.title}</Link>}\n                description={renderTags(item.tags)}\n              />\n              <div>{item.creator.displayName}</div>\n            </Skeleton>\n          </List.Item>\n        )}\n      />\n      <div style={{padding:\"2rem\"}}>\n      <AskQuestion {...props}>Ask Question</AskQuestion>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}