{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"antd\";\nimport Layout from \"../components/layout/Layout\";\nimport QuestionDescription from \"../components/questionDescription/QuestionDescription\";\nimport { getQuestionById as _getQuestionById, voteQuestion as _voteQuestion } from \"../redux/index\";\n\nvar QuestionDescriptionPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionDescriptionPage, _Component);\n\n  function QuestionDescriptionPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionDescriptionPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionDescriptionPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var props = _this.props;\n      console.log(props.currentQuestion);\n      return __jsx(Layout, null, __jsx(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        style: {\n          padding: \"0 10%\"\n        },\n        dataSource: props.currentQuestion._id ? [props.currentQuestion] : [],\n        loading: props.currentQuestionLoader,\n        renderItem: function renderItem(item) {\n          return __jsx(QuestionDescription, _extends({\n            item: item\n          }, props));\n        }\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(QuestionDescriptionPage, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref.store, query = _ref.query;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_getQuestionById(query.id));\n\n            case 4:\n              action = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                currentQuestion: store.getState().question.currentQuestion\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }]);\n\n  return QuestionDescriptionPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentQuestion: state.question.currentQuestion,\n    currentQuestionLoader: state.question.currentQuestionLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestionById: function getQuestionById(id) {\n      return _getQuestionById(id)(dispatch);\n    },\n    voteQuestion: function voteQuestion(id, type) {\n      return _voteQuestion(id, type)(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDescriptionPage);","map":null,"metadata":{},"sourceType":"module"}