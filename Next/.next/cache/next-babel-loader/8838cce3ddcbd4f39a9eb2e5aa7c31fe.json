{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nimport Questions from \"../components/questions/Questions\";\nimport { getQuestions } from \"../redux/index\";\n\nclass IndexPage extends Component {\n  static async getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    try {\n      const action = await getQuestions(\"\");\n      await action(store.dispatch);\n      return {\n        questions: store.getState().questions\n      };\n    } catch (err) {\n      return {};\n    }\n  }\n\n  render() {\n    const props = this.props;\n    console.log(props);\n    return __jsx(Layout, null, __jsx(\"div\", {\n      style: {\n        padding: \"0 10%\"\n      }\n    }, __jsx(List, {\n      className: \"demo-loadmore-list\",\n      loading: props.questionsLoader,\n      itemLayout: \"horizontal\",\n      dataSource: props.questions,\n      renderItem: (item, index) => __jsx(Questions, {\n        item: item,\n        key: index,\n        index: index\n      })\n    }), __jsx(\"div\", {\n      style: {\n        padding: \"2rem\"\n      }\n    }, __jsx(AskQuestion, props, \"Ask Question\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);","map":null,"metadata":{},"sourceType":"module"}