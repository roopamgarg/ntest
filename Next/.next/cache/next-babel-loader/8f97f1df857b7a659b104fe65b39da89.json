{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, LOGOUT_USER, REGISTER_USER_REQUEST, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./userTypes\";\nimport cookie from \"react-cookies\";\nconst initialState = {\n  token: cookie.load(\"token\"),\n  loginLoader: false,\n  loginFailure: null,\n  registerLoader: false,\n  registerFailure: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER_REQUEST:\n      return _objectSpread({}, state, {\n        loginLoader: true,\n        loginFailure: null,\n        token: null\n      });\n\n    case LOGIN_USER_SUCCESS:\n      cookie.save(\"token\", action.payload.token, {\n        path: \"/\"\n      });\n      return _objectSpread({}, state, {\n        token: action.payload.token,\n        loginLoader: false\n      });\n\n    case LOGIN_USER_FAILURE:\n      return _objectSpread({}, state, {\n        loginLoader: false,\n        loginFailure: action.payload\n      });\n\n    case REGISTER_USER_REQUEST:\n      return _objectSpread({}, state, {\n        registerLoader: true,\n        registerFailure: null,\n        token: null\n      });\n\n    case REGISTER_USER_SUCCESS:\n      cookie.save(\"token\", action.payload.token, {\n        path: \"/\"\n      });\n      return _objectSpread({}, state, {\n        token: action.payload.token,\n        registerLoader: false\n      });\n\n    case REGISTER_USER_FAILURE:\n      return _objectSpread({}, state, {\n        registerLoader: false,\n        registerFailure: action.payload\n      });\n\n    case LOGOUT_USER:\n      cookie.remove(\"token\", {\n        path: \"/\"\n      });\n      return _objectSpread({}, state, {\n        token: null,\n        loginFailure: null,\n        registerFailure: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":null,"metadata":{},"sourceType":"module"}