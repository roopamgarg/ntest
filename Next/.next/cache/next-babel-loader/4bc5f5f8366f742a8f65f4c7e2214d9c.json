{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/reply/Reply.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport { addReply } from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\n\nfunction Reply(props) {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  const showModal = () => {\n    if (!cookie.load('token')) {\n      props.history.push('/login');\n    }\n\n    setVisible(true);\n  };\n\n  const handleOk = e => {\n    console.log(e);\n    props.addReply({\n      text,\n      questionId: props.questionId\n    });\n    setText(\"\");\n    setVisible(false);\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.children), __jsx(Modal, {\n    title: \"Add A Reply\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Form, {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(TextArea, {\n    placeholder: \"Enter Your Question Description( Mark Down Supported )\",\n    autoSize: {\n      minRows: 2\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: data => dispatch(addReply(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reply);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/reply/Reply.js"],"names":["React","useState","Button","Modal","Form","TextArea","connect","addReply","ReactMarkdown","cookie","Reply","props","visible","setVisible","text","setText","showModal","load","history","push","handleOk","e","console","log","questionId","handleCancel","children","minRows","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMe,SAAS,GAAG,MAAM;AACtB,QAAG,CAACP,MAAM,CAACQ,IAAP,CAAY,OAAZ,CAAJ,EAAyB;AACvBN,MAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;;AACDN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GALD;;AAOA,QAAMO,QAAQ,GAAGC,CAAC,IAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAV,IAAAA,KAAK,CAACJ,QAAN,CAAe;AAACO,MAAAA,IAAD;AAAMU,MAAAA,UAAU,EAACb,KAAK,CAACa;AAAvB,KAAf;AACAT,IAAAA,OAAO,CAAC,EAAD,CAAP;AAEAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;;AAQA,QAAMY,YAAY,GAAGJ,CAAC,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEG,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACe,QADT,CADF,EAIE,MAAC,KAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAEd,OAFX;AAGE,IAAA,IAAI,EAAEQ,QAHR;AAIE,IAAA,QAAQ,EAAEK,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEX,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,WAAW,EAAC,wDADd;AAEE,IAAA,QAAQ,EAAE;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAFZ;AAGE,IAAA,KAAK,EAAEb,IAHT;AAIE,IAAA,QAAQ,EAAEO,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CANF,CAJF,CADF;AA0BD;;AAGD,MAAMC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAEE,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL1B,IAAAA,QAAQ,EAAG2B,IAAD,IACRD,QAAQ,CAAC1B,QAAQ,CAAC2B,IAAD,CAAT;AAFL,GAAP;AAID,CALD;;AAMF,eAAe5B,OAAO,CAACwB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CtB,KAA5C,CAAf","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport {addReply} from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\n\n\nfunction Reply(props) {\n  const [visible, setVisible] = useState(false);\n  const [text, setText] = useState(\"\");\n\n\n  const showModal = () => {\n    if(!cookie.load('token')){\n      props.history.push('/login')\n    }\n    setVisible(true);\n  };\n\n  const handleOk = e => {\n    console.log(e);\n    props.addReply({text,questionId:props.questionId})\n    setText(\"\")\n  \n    setVisible(false);\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={showModal}>\n        {props.children}\n      </Button>\n      <Modal\n        title=\"Add A Reply\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form className=\"login-form\">\n          <ReactMarkdown source={text} />\n          <Form.Item>\n            <TextArea\n              placeholder=\"Enter Your Question Description( Mark Down Supported )\"\n              autoSize={{ minRows: 2 }}\n              value={text}\n              onChange={e => setText(e.target.value)}\n            />\n          </Form.Item>\n          \n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({});\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      addReply: (data) =>\n        dispatch(addReply(data))\n    };\n  };\nexport default connect(mapStateToProps,mapDispatchToProps)(Reply);\n"]},"metadata":{},"sourceType":"module"}