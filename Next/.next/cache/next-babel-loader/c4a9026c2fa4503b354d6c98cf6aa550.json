{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/questions/Questions.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { List, Skeleton, Avatar, Tag } from \"antd\";\nimport Link from \"next/link\";\nimport { getDownVotesLength, getUpVotesLength, colorList, renderTags } from \"../../helper/helper\";\n\nfunction Questions(props) {\n  var item = props.item,\n      index = props.index;\n  return __jsx(List.Item, {\n    actions: [__jsx(\"a\", {\n      style: {\n        marginLeft: \"45px\"\n      },\n      key: \"list-loadmore-more-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, getUpVotesLength(item.votes), \" Up Votes\"), __jsx(\"a\", {\n      key: \"list-loadmore-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, getDownVotesLength(item.votes), \" Down Votes\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Skeleton, {\n    avatar: true,\n    title: false,\n    loading: props.questionsLoader,\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(List.Item.Meta, {\n    avatar: __jsx(Avatar, {\n      style: {\n        backgroundColor: colorList[index % 4],\n        verticalAlign: \"middle\"\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.creator.displayName[0].toUpperCase()),\n    title: __jsx(Link, {\n      href: \"/question/\".concat(item._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      style: {\n        fontSize: \"1.4rem\",\n        margin: \"0 0 0.5rem 0\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, item.title)),\n    description: renderTags(item.tags, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      marginLeft: \"56px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item.creator.displayName)));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/questions/Questions.js"],"names":["React","List","Skeleton","Avatar","Tag","Link","getDownVotesLength","getUpVotesLength","colorList","renderTags","Questions","props","item","index","marginLeft","votes","questionsLoader","backgroundColor","verticalAlign","creator","displayName","toUpperCase","_id","fontSize","margin","display","title","tags"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,GAAjC,QAA4C,MAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,kBAAR,EAA2BC,gBAA3B,EAA4CC,SAA5C,EAAsDC,UAAtD,QAAuE,qBAAvE;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MACfC,IADe,GACDD,KADC,CACfC,IADe;AAAA,MACVC,KADU,GACDF,KADC,CACVE,KADU;AAEtB,SACI,MAAC,IAAD,CAAM,IAAN;AAEA,IAAA,OAAO,EAAE,CACP;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAX;AAAgC,MAAA,GAAG,EAAC,sBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,gBAAgB,CAACK,IAAI,CAACG,KAAN,CADnB,cADO,EAIP;AAAG,MAAA,GAAG,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,kBAAkB,CAACM,IAAI,CAACG,KAAN,CADrB,gBAJO,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWA,MAAC,QAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,KAAK,EAAE,KAFT;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACK,eAHjB;AAIE,IAAA,MAAM,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,IAAA,MAAM,EACJ,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAET,SAAS,CAACK,KAAK,GAAG,CAAT,CADrB;AAELK,QAAAA,aAAa,EAAE;AAFV,OADT;AAKE,MAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGN,IAAI,CAACO,OAAL,CAAaC,WAAb,CAAyB,CAAzB,EAA4BC,WAA5B,EAPH,CAFJ;AAYE,IAAA,KAAK,EACH,MAAC,IAAD;AAAM,MAAA,IAAI,sBAAeT,IAAI,CAACU,GAApB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,QADL;AAELC,QAAAA,MAAM,EAAE,cAFH;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGb,IAAI,CAACc,KAPR,CADF,CAbJ;AAyBE,IAAA,WAAW,EAAEjB,UAAU,CAACG,IAAI,CAACe,IAAN,EAAWd,KAAX,CAzBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAiCE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,IAAI,CAACO,OAAL,CAAaC,WAA/C,CAjCF,CAXA,CADJ;AAkDH;;AAED,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport { List, Skeleton, Avatar, Tag } from \"antd\";\nimport Link from \"next/link\";\nimport {getDownVotesLength,getUpVotesLength,colorList,renderTags} from \"../../helper/helper\";\n\nfunction Questions(props) {\n    const {item,index} = props\n    return (\n        <List.Item\n\n        actions={[\n          <a  style={{marginLeft:\"45px\"}} key=\"list-loadmore-more-1\">\n            {getUpVotesLength(item.votes)} Up Votes\n          </a>,\n          <a key=\"list-loadmore-more\">\n            {getDownVotesLength(item.votes)} Down Votes\n          </a>\n        ]}\n      >\n        <Skeleton\n          avatar\n          title={false}\n          loading={props.questionsLoader}\n          active\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar\n                style={{\n                  backgroundColor: colorList[index % 4],\n                  verticalAlign: \"middle\"\n                }}\n                size=\"large\"\n              >\n                {item.creator.displayName[0].toUpperCase()}\n              </Avatar>\n            }\n            title={\n              <Link href={`/question/${item._id}`}>\n                <a\n                  style={{\n                    fontSize: \"1.4rem\",\n                    margin: \"0 0 0.5rem 0\",\n                    display: \"inline-block\"\n                  }}\n                >\n                  {item.title}\n                </a>\n              </Link>\n            }\n            description={renderTags(item.tags,index)}\n          />\n          <div style={{marginLeft:\"56px\"}}>{item.creator.displayName}</div>\n        </Skeleton>\n      </List.Item>\n    \n    );\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}