{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { List, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nimport Questions from \"../components/questions/Questions\";\nimport { getQuestions } from \"../redux/index\";\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      page: 0,\n      pageSize: 10\n    });\n\n    _defineProperty(this, \"loadMore\", !this.props.questionsLoader ? __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.onLoadMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading more\")) : null);\n\n    _defineProperty(this, \"onLoadMore\", () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n    });\n  }\n\n  static async getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    try {\n      const action = await getQuestions(\"\");\n      await action(store.dispatch);\n      return {\n        questions: store.getState().questions\n      };\n    } catch (err) {\n      return {};\n    }\n  }\n\n  render() {\n    const props = this.props;\n    console.log(props);\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"0 10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(List, {\n      loadMore: this.loadMore,\n      className: \"demo-loadmore-list\",\n      loading: props.questionsLoader,\n      itemLayout: \"horizontal\",\n      dataSource: props.questions,\n      renderItem: (item, index) => __jsx(Questions, {\n        item: item,\n        key: index,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        padding: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(AskQuestion, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \"Ask Question\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","Component","List","Button","connect","Layout","AskQuestion","Questions","getQuestions","IndexPage","page","pageSize","props","questionsLoader","textAlign","marginTop","height","lineHeight","onLoadMore","setState","state","getInitialProps","store","isServer","pathname","query","action","dispatch","questions","getState","err","render","console","log","padding","loadMore","item","index","mapStateToProps","question","mapDispatchToProps","search","message"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAUxB;AACNS,MAAAA,IAAI,EAAC,CADC;AAENC,MAAAA,QAAQ,EAAC;AAFH,KAVwB;;AAAA,sCAcrB,CAAC,KAAKC,KAAL,CAAWC,eAAZ,GACT;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,MAAM,EAAE,EAHH;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,CADS,GAWP,IAzB4B;;AAAA,wCA0BnB,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAC,KAAKU,KAAL,CAAWV,IAAX,GAAgB;AADT,OAAd;AAID,KA/B+B;AAAA;;AAChC,eAAaW,eAAb,CAA6B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAA7B,EAAmE;AACjE,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMlB,YAAY,CAAC,EAAD,CAAjC;AACA,YAAMkB,MAAM,CAACJ,KAAK,CAACK,QAAP,CAAZ;AACA,aAAO;AAAEC,QAAAA,SAAS,EAAEN,KAAK,CAACO,QAAN,GAAiBD;AAA9B,OAAP;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,aAAO,EAAP;AACD;AACF;;AAuBDC,EAAAA,MAAM,GAAG;AACP,UAAMnB,KAAK,GAAG,KAAKA,KAAnB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEsB,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,QADjB;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,OAAO,EAAEvB,KAAK,CAACC,eAHjB;AAIE,MAAA,UAAU,EAAC,YAJb;AAKE,MAAA,UAAU,EAAED,KAAK,CAACgB,SALpB;AAME,MAAA,UAAU,EAAE,CAACQ,IAAD,EAAOC,KAAP,KAAiB,MAAC,SAAD;AAAW,QAAA,IAAI,EAAED,IAAjB;AAAuB,QAAA,GAAG,EAAEC,KAA5B;AAAmC,QAAA,KAAK,EAAEA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAK,MAAA,KAAK,EAAE;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD,eAAiBtB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CATF,CADF,CADF;AAiBD;;AApD+B;;AAuDlC,MAAM0B,eAAe,GAAGlB,KAAK,KAAK;AAChCQ,EAAAA,SAAS,EAAER,KAAK,CAACmB,QAAN,CAAeX,SADM;AAEhCf,EAAAA,eAAe,EAAEO,KAAK,CAACmB,QAAN,CAAe1B;AAFA,CAAL,CAA7B;;AAKA,MAAM2B,kBAAkB,GAAGb,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,YAAY,EAAE,CAACiC,MAAD,EAASC,OAAT,KAAqBf,QAAQ,CAACnB,YAAY,CAACiC,MAAD,EAASC,OAAT,CAAb;AADtC,GAAP;AAGD,CAJD;;AAKA,eAAetC,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/B,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { List, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nimport Questions from \"../components/questions/Questions\";\n\nimport { getQuestions } from \"../redux/index\";\nclass IndexPage extends Component {\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      const action = await getQuestions(\"\");\n      await action(store.dispatch);\n      return { questions: store.getState().questions };\n    } catch (err) {\n      return {};\n    }\n  }\n  state = {\n    page:0,\n    pageSize:10\n  }\n  loadMore = !this.props.questionsLoader ? (\n    <div\n      style={{\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px',\n      }}\n    >\n      <Button onClick={this.onLoadMore}>loading more</Button>\n    </div>\n  ) : null;\n  onLoadMore = () => {\n    this.setState({\n      page:this.state.page+1\n    })\n\n  }\n  render() {\n    const props = this.props;\n    console.log(props);\n    return (\n      <Layout>\n        <div style={{ padding: \"0 10%\" }}>\n          <List\n            loadMore={this.loadMore}\n            className=\"demo-loadmore-list\"\n            loading={props.questionsLoader}\n            itemLayout=\"horizontal\"\n            dataSource={props.questions}\n            renderItem={(item, index) => <Questions item={item} key={index} index={index} />}\n          />\n          <div style={{ padding: \"2rem\" }}>\n            <AskQuestion {...props}>Ask Question</AskQuestion>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n"]},"metadata":{},"sourceType":"module"}