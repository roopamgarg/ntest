{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nimport Questions from \"../components/questions/Questions\";\nimport { getQuestions as _getQuestions } from \"../redux/index\";\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IndexPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      page: 0,\n      pageSize: 10\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMore\", !questionsLoader ? __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: _this.onLoadMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading more\")) : null);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMore\", function () {\n      _this.setState({\n        page: _this.state.page + 1\n      }, function () {\n        _this.getQuestions(\"\", _this.state.page, _this.state.pageSize);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      console.log(props);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"0 10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(List, {\n        loadMore: this.loadMore,\n        className: \"demo-loadmore-list\",\n        loading: props.questionsLoader,\n        itemLayout: \"horizontal\",\n        dataSource: props.questions,\n        renderItem: function renderItem(item, index) {\n          return __jsx(Questions, {\n            item: item,\n            key: index,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          padding: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(AskQuestion, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"Ask Question\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store, isServer, pathname, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_getQuestions(\"\"));\n\n            case 4:\n              action = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                questions: store.getState().questions\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }]);\n\n  return IndexPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.question.questions,\n    questionsLoader: state.question.questionsLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(search, message) {\n      return dispatch(_getQuestions(search, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","Component","List","connect","Layout","AskQuestion","Questions","getQuestions","IndexPage","page","pageSize","questionsLoader","textAlign","marginTop","height","lineHeight","onLoadMore","setState","state","props","console","log","padding","loadMore","questions","item","index","store","isServer","pathname","query","action","dispatch","getState","mapStateToProps","question","mapDispatchToProps","search","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nimport Questions from \"../components/questions/Questions\";\n\nimport { getQuestions } from \"../redux/index\";\nclass IndexPage extends Component {\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      const action = await getQuestions(\"\");\n      await action(store.dispatch);\n      return { questions: store.getState().questions };\n    } catch (err) {\n      return {};\n    }\n  }\n  state = {\n    page:0,\n    pageSize:10\n  }\n  loadMore = !questionsLoader ? (\n    <div\n      style={{\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px',\n      }}\n    >\n      <Button onClick={this.onLoadMore}>loading more</Button>\n    </div>\n  ) : null;\n  loadMore = () => {\n    this.setState({\n      page:this.state.page+1\n    },()=>{\n      this.getQuestions(\"\",this.state.page,this.state.pageSize)\n    })\n\n  }\n  render() {\n    const props = this.props;\n    console.log(props);\n    return (\n      <Layout>\n        <div style={{ padding: \"0 10%\" }}>\n          <List\n            loadMore={this.loadMore}\n            className=\"demo-loadmore-list\"\n            loading={props.questionsLoader}\n            itemLayout=\"horizontal\"\n            dataSource={props.questions}\n            renderItem={(item, index) => <Questions item={item} key={index} index={index} />}\n          />\n          <div style={{ padding: \"2rem\" }}>\n            <AskQuestion {...props}>Ask Question</AskQuestion>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n"]},"metadata":{},"sourceType":"module"}