{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport cookie from \"react-cookies\";\nimport Router from \"next/router\";\nimport Layout from \"../components/layout/Layout\";\nimport RegisterForm from \"../components/forms/RegisterForm\";\nimport { registerUser } from \"../redux/index\";\n\nfunction RegisterPage(props) {\n  useEffect(() => {\n    if (cookie.load(\"token\")) {\n      return Router.push(\"/\");\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          await props.registerUser(values, props.history, message);\n        } catch (err) {}\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"login__form-container\"\n  }, __jsx(RegisterForm, {\n    getFieldDecorator: getFieldDecorator,\n    registerLoader: props.registerLoader,\n    handleSubmit: handleSubmit\n  })));\n}\n\nconst WrappedRegisterForm = Form.create({\n  name: \"register_form\"\n})(RegisterPage);\n\nconst mapStateToProps = state => ({\n  registerLoader: state.user.registerLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: (data, history, message) => registerUser(data, history, message)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterForm);","map":null,"metadata":{},"sourceType":"module"}