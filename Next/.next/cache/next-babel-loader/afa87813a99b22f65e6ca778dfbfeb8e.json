{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions as _getQuestions } from \"../redux/index\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nvar colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nvar getUpVotesLength = function getUpVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref) {\n    var type = _ref.type;\n    return type === true;\n  });\n  return upVotes.length;\n};\n\nvar getDownVotesLength = function getDownVotesLength(votes) {\n  var upVotes = votes.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === false;\n  });\n  return upVotes.length;\n};\n\nvar renderTags = function renderTags(tags) {\n  return tags.map(function (tag) {\n    return __jsx(Tag, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, tag);\n  });\n};\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions() {\n    _classCallCheck(this, Questions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Questions).apply(this, arguments));\n  }\n\n  _createClass(Questions, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      console.log(props);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"0 10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(List, {\n        className: \"demo-loadmore-list\",\n        loading: props.questionsLoader,\n        itemLayout: \"horizontal\",\n        dataSource: props.questions,\n        renderItem: function renderItem(item, index) {\n          return __jsx(List.Item, {\n            key: item._id,\n            actions: [__jsx(\"a\", {\n              key: \"list-loadmore-more-1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, getUpVotesLength(item.votes), \" Up Votes\"), __jsx(\"a\", {\n              key: \"list-loadmore-more\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, getDownVotesLength(item.votes), \" Down Votes\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, __jsx(Skeleton, {\n            avatar: true,\n            title: false,\n            loading: props.questionsLoader,\n            active: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, __jsx(List.Item.Meta, {\n            avatar: __jsx(Avatar, {\n              style: {\n                backgroundColor: colorList[index % 4],\n                verticalAlign: \"middle\"\n              },\n              size: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, item.creator.displayName[0].toUpperCase()),\n            title: __jsx(Link, {\n              href: \"/\".concat(item._id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, __jsx(\"a\", {\n              style: {\n                fontSize: \"1.4rem\",\n                margin: \"0 0 0.5rem 0\",\n                display: \"inline-block\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, item.title)),\n            description: renderTags(item.tags),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }), __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, item.creator.displayName)));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          padding: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __jsx(AskQuestion, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"Ask Question\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref3) {\n      var store, isServer, pathname, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref3.store, isServer = _ref3.isServer, pathname = _ref3.pathname, query = _ref3.query;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_getQuestions(\"\"));\n\n            case 4:\n              action = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                questions: store.getState().questions\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.question.questions,\n    questionsLoader: state.question.questionsLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(search, message) {\n      return dispatch(_getQuestions(search, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","useEffect","Component","List","Button","Skeleton","Avatar","Tag","connect","getQuestions","Layout","Link","AskQuestion","colorList","getUpVotesLength","votes","upVotes","filter","type","length","getDownVotesLength","renderTags","tags","map","tag","Questions","props","console","log","padding","questionsLoader","questions","item","index","_id","backgroundColor","verticalAlign","creator","displayName","toUpperCase","fontSize","margin","display","title","store","isServer","pathname","query","action","dispatch","getState","mapStateToProps","state","question","mapDispatchToProps","search","message"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from \"react\";\nimport { List, Button, Skeleton, Avatar, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({ type }) => type === false);\n  return upVotes.length;\n};\n\nconst renderTags = tags => {\n  return tags.map(tag => <Tag color=\"blue\">{tag}</Tag>);\n};\nclass Questions extends Component {\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      const action = await getQuestions(\"\");\n\n      await action(store.dispatch);\n\n      return { questions: store.getState().questions };\n    } catch (err) {\n      return {};\n    }\n  }\n  render() {\n    const props = this.props;\n    console.log(props);\n    return (\n      <Layout>\n        <div style={{ padding: \"0 10%\" }}>\n          <List\n            className=\"demo-loadmore-list\"\n            loading={props.questionsLoader}\n            itemLayout=\"horizontal\"\n            dataSource={props.questions}\n            renderItem={(item, index) => (\n              <List.Item\n                key={item._id}\n                actions={[\n                  <a key=\"list-loadmore-more-1\">\n                    {getUpVotesLength(item.votes)} Up Votes\n                  </a>,\n                  <a key=\"list-loadmore-more\">\n                    {getDownVotesLength(item.votes)} Down Votes\n                  </a>\n                ]}\n              >\n                <Skeleton\n                  avatar\n                  title={false}\n                  loading={props.questionsLoader}\n                  active\n                >\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar\n                        style={{\n                          backgroundColor: colorList[index % 4],\n                          verticalAlign: \"middle\"\n                        }}\n                        size=\"large\"\n                      >\n                        {item.creator.displayName[0].toUpperCase()}\n                      </Avatar>\n                    }\n                    title={\n                      <Link href={`/${item._id}`}>\n                        <a\n                          style={{\n                            fontSize: \"1.4rem\",\n                            margin: \"0 0 0.5rem 0\",\n                            display: \"inline-block\"\n                          }}\n                        >\n                          {item.title}\n                        </a>\n                      </Link>\n                    }\n                    description={renderTags(item.tags)}\n                  />\n                  <div>{item.creator.displayName}</div>\n                </Skeleton>\n              </List.Item>\n            )}\n          />\n          <div style={{ padding: \"2rem\" }}>\n            <AskQuestion {...props}>Ask Question</AskQuestion>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}