{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport { addReply } from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\n\nfunction Reply(props) {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  const showModal = () => {\n    if (!cookie.load('token')) {\n      Router.push('/login');\n    }\n\n    setVisible(true);\n  };\n\n  const handleOk = async e => {\n    console.log(e);\n    setVisible(false);\n    await props.addReply({\n      text,\n      questionId: props.questionId\n    });\n    setText(\"\");\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(Button, {\n    type: \"primary\",\n    onClick: showModal\n  }, props.children), __jsx(Modal, {\n    title: \"Add A Reply\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel\n  }, __jsx(Form, {\n    className: \"login-form\"\n  }, __jsx(ReactMarkdown, {\n    source: text\n  }), __jsx(Form.Item, null, __jsx(TextArea, {\n    placeholder: \"Enter Your Question Description( Mark Down Supported )\",\n    autoSize: {\n      minRows: 2\n    },\n    value: text,\n    onChange: e => setText(e.target.value)\n  })))));\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: data => addReply(data)(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reply);","map":null,"metadata":{},"sourceType":"module"}