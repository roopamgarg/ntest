{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/reply/Reply.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport { addReply as _addReply } from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router';\n\nfunction Reply(props) {\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var showModal = function showModal() {\n    if (!cookie.load('token')) {\n      Router.push('/login');\n    }\n\n    setVisible(true);\n  };\n\n  var handleOk = function handleOk(e) {\n    return _regeneratorRuntime.async(function handleOk$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(e);\n            setVisible(false);\n            setText(\"\");\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(_addReply({\n              text: text,\n              questionId: props.questionId\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handleCancel = function handleCancel(e) {\n    console.log(e);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.children), __jsx(Modal, {\n    title: \"Add A Reply\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Form, {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(TextArea, {\n    placeholder: \"Enter Your Question Description( Mark Down Supported )\",\n    autoSize: {\n      minRows: 2\n    },\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addReply: function addReply(data) {\n      return _addReply(data)(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reply);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/reply/Reply.js"],"names":["React","useState","Button","Modal","Form","TextArea","connect","addReply","ReactMarkdown","cookie","Router","Reply","props","visible","setVisible","text","setText","showModal","load","push","handleOk","e","console","log","questionId","handleCancel","children","minRows","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { connect } from \"react-redux\";\nimport {addReply} from '../../redux/index';\nimport ReactMarkdown from \"react-markdown\";\nimport cookie from \"react-cookies\";\nimport Router from 'next/router'\n\nfunction Reply(props) {\n  const [visible, setVisible] = useState(false);\n  const [text, setText] = useState(\"\");\n\n\n  const showModal = () => {\n    if(!cookie.load('token')){\n      Router.push('/login')\n    }\n    setVisible(true);\n  };\n\n  const handleOk =async e => {\n    console.log(e);\n    setVisible(false);\n    setText(\"\")\n    await addReply({text,questionId:props.questionId})\n  \n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={showModal}>\n        {props.children}\n      </Button>\n      <Modal\n        title=\"Add A Reply\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form className=\"login-form\">\n          <ReactMarkdown source={text} />\n          <Form.Item>\n            <TextArea\n              placeholder=\"Enter Your Question Description( Mark Down Supported )\"\n              autoSize={{ minRows: 2 }}\n              value={text}\n              onChange={e => setText(e.target.value)}\n            />\n          </Form.Item>\n          \n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({});\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      addReply: (data) =>\n        addReply(data)(dispatch)\n    };\n  };\nexport default connect(mapStateToProps,mapDispatchToProps)(Reply);\n"]},"metadata":{},"sourceType":"module"}