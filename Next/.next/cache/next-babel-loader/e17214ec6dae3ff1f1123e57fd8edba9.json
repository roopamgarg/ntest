{"ast":null,"code":"var _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/questionDescription/Replies.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { List, Comment, Avatar, Tooltip, Icon } from 'antd';\nimport { connect } from \"react-redux\";\nimport { voteReply } from \"../../redux/index\";\nimport moment from 'moment';\nimport ReactMarkdown from 'react-markdown';\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n  const upVotes = votes.filter(({\n    type\n  }) => type === true);\n  return upVotes.length;\n};\n\nconst getDownVotesLength = votes => {\n  const upVotes = votes.filter(({\n    type\n  }) => type === false);\n  return upVotes.length;\n};\n\nfunction Replies(props) {\n  const getActions = (votes, replyId) => {\n    const actions = [__jsx(\"span\", {\n      key: \"comment-basic-like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(Tooltip, {\n      title: \"Up Vote\",\n      onClick: () => props.voteReply(replyId, true, props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      style: {\n        paddingLeft: 8,\n        cursor: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, getUpVotesLength(votes))), __jsx(\"span\", {\n      key: \"comment-basic-dislike\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Tooltip, {\n      title: \"Down Vote\",\n      onClick: () => props.voteReply(replyId, false, props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      style: {\n        paddingLeft: 8,\n        cursor: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, getDownVotesLength(votes)))];\n    return actions;\n  };\n\n  const data = props.replies;\n  return __jsx(List, {\n    className: \"comment-list\",\n    header: `${data.length} replies`,\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    renderItem: (item, index) => __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Comment, {\n      actions: getActions(item.votes, item._id),\n      author: item.user.displayName,\n      avatar: __jsx(Avatar, {\n        style: {\n          backgroundColor: colorList[index % 4],\n          verticalAlign: \"middle\"\n        },\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.user.displayName[0].toUpperCase(), \" \"),\n      content: __jsx(ReactMarkdown, {\n        source: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      datetime: moment(item.createdAt).calendar(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    voteReply: (id, type, history) => dispatch(voteReply(id, type, history))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Replies);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/components/questionDescription/Replies.js"],"names":["React","List","Comment","Avatar","Tooltip","Icon","connect","voteReply","moment","ReactMarkdown","colorList","getUpVotesLength","votes","upVotes","filter","type","length","getDownVotesLength","Replies","props","getActions","replyId","actions","history","paddingLeft","cursor","data","replies","item","index","_id","user","displayName","backgroundColor","verticalAlign","toUpperCase","text","createdAt","calendar","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { List, Comment, Avatar, Tooltip, Icon } from 'antd';\nimport { connect } from \"react-redux\";\nimport { voteReply } from \"../../redux/index\";\nimport moment from 'moment';\nimport ReactMarkdown from 'react-markdown';\n\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\n\nconst getUpVotesLength = votes => {\n    const upVotes = votes.filter(({ type }) => type === true);\n    return upVotes.length;\n  };\n  \n  const getDownVotesLength = votes => {\n    const upVotes = votes.filter(({ type }) => type === false);\n    return upVotes.length;\n  };\n\nfunction Replies(props) {\n    const getActions = (votes,replyId) => {\n        const actions = [\n            <span key=\"comment-basic-like\">\n              <Tooltip title=\"Up Vote\" onClick={()=>props.voteReply(replyId,true,props.history)}>\n                <Icon\n                  type=\"up\"\n                />\n              </Tooltip>\n              <span style={{ paddingLeft: 8, cursor: 'auto' }}>{getUpVotesLength(votes)}</span>\n            </span>,\n            <span key=\"comment-basic-dislike\">\n              <Tooltip title=\"Down Vote\" onClick={()=>props.voteReply(replyId,false,props.history)}>\n                <Icon\n                  type=\"down\"\n                />\n              </Tooltip>\n              <span style={{ paddingLeft: 8, cursor: 'auto' }}>{getDownVotesLength(votes)}</span>\n            </span>\n          ];\n          return actions\n    }\n    const data = props.replies;\n    return (\n        <List\n        className=\"comment-list\"\n        header={`${data.length} replies`}\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={(item,index) => (\n          <li>\n            <Comment\n              actions={getActions(item.votes,item._id)}\n              author={item.user.displayName}\n              avatar={<Avatar   style={{\n                backgroundColor: colorList[index % 4],\n                verticalAlign: \"middle\"\n              }}\n              size=\"large\" >{item.user.displayName[0].toUpperCase()} </Avatar>}\n              content={<ReactMarkdown source={item.text}/>}\n              datetime={moment(item.createdAt).calendar() }\n            />\n          </li>\n        )}\n      />\n    );\n}\nconst mapStateToProps = state => ({ });\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    voteReply: (id,type,history) => dispatch(voteReply(id,type,history)),\n     \n  };\n};\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Replies)\n"]},"metadata":{},"sourceType":"module"}