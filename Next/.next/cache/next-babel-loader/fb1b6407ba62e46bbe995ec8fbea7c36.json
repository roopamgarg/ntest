{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require(\"./questionTypes\"),\n    GET_QUESTIONS_FAILURE = _require.GET_QUESTIONS_FAILURE,\n    GET_QUESTIONS_REQUEST = _require.GET_QUESTIONS_REQUEST,\n    GET_QUESTIONS_SUCCESS = _require.GET_QUESTIONS_SUCCESS,\n    GET_QUESTION_DESCRIPTION_FAILURE = _require.GET_QUESTION_DESCRIPTION_FAILURE,\n    GET_QUESTION_DESCRIPTION_REQUEST = _require.GET_QUESTION_DESCRIPTION_REQUEST,\n    GET_QUESTION_DESCRIPTION_SUCCESS = _require.GET_QUESTION_DESCRIPTION_SUCCESS,\n    ASK_QUESTION_REQUEST = _require.ASK_QUESTION_REQUEST,\n    ASK_QUESTION_SUCCESS = _require.ASK_QUESTION_SUCCESS,\n    ASK_QUESTION_FAILURE = _require.ASK_QUESTION_FAILURE,\n    ADD_REPLY_REQUEST = _require.ADD_REPLY_REQUEST,\n    ADD_REPLY_SUCCESS = _require.ADD_REPLY_SUCCESS,\n    ADD_REPLY_FAILURE = _require.ADD_REPLY_FAILURE,\n    EDIT_REPLY = _require.EDIT_REPLY;\n\nvar initialState = {\n  questions: [],\n  questionsLoader: false,\n  getQuestionsFailure: null,\n  currentQuestion: {},\n  currentQuestionLoader: false,\n  currentQuestionFailure: null,\n  askQuestionLoader: false,\n  addQuestionLoader: false\n};\n\nvar questionReducer = function questionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_QUESTIONS_REQUEST:\n      return _objectSpread({}, state, {\n        questionsLoader: true,\n        getQuestionsFailure: null\n      });\n\n    case GET_QUESTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        questions: action.payload,\n        questionsLoader: false,\n        getQuestionsFailure: null\n      });\n\n    case GET_QUESTIONS_FAILURE:\n      return _objectSpread({}, state, {\n        questionsLoader: false,\n        getQuestionsFailure: action.payload\n      });\n\n    case GET_QUESTION_DESCRIPTION_REQUEST:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: true,\n        currentQuestionFailure: null\n      });\n\n    case GET_QUESTION_DESCRIPTION_SUCCESS:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: false,\n        currentQuestion: action.payload\n      });\n\n    case GET_QUESTION_DESCRIPTION_FAILURE:\n      return _objectSpread({}, state, {\n        currentQuestionLoader: false,\n        currentQuestionFailure: action.payload\n      });\n\n    case ASK_QUESTION_REQUEST:\n      return _objectSpread({}, state, {\n        askQuestionLoader: true\n      });\n\n    case ASK_QUESTION_SUCCESS:\n      return _objectSpread({}, state, {\n        askQuestionLoader: false\n      });\n\n    case ASK_QUESTION_FAILURE:\n      return _objectSpread({}, state, {\n        askQuestionLoader: false\n      });\n\n    case ADD_REPLY_REQUEST:\n      return _objectSpread({}, state, {\n        addQuestionLoader: true\n      });\n\n    case ADD_REPLY_SUCCESS:\n      return _objectSpread({}, state, {\n        addQuestionLoader: false\n      });\n\n    case ADD_REPLY_FAILURE:\n      return _objectSpread({}, state, {\n        addQuestionLoader: false\n      });\n\n    case EDIT_REPLY:\n      var index = state.currentQuestion.replies.findIndex(function (_ref) {\n        var _id = _ref._id;\n        return _id === action.payload._id;\n      });\n      console.log(state);\n      var question = state.currentQuestion;\n      question.replies[index] = action.payload;\n      return _objectSpread({}, state, {\n        currentQuestion: _objectSpread({}, question)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/redux/question/questionReducers.js"],"names":["require","GET_QUESTIONS_FAILURE","GET_QUESTIONS_REQUEST","GET_QUESTIONS_SUCCESS","GET_QUESTION_DESCRIPTION_FAILURE","GET_QUESTION_DESCRIPTION_REQUEST","GET_QUESTION_DESCRIPTION_SUCCESS","ASK_QUESTION_REQUEST","ASK_QUESTION_SUCCESS","ASK_QUESTION_FAILURE","ADD_REPLY_REQUEST","ADD_REPLY_SUCCESS","ADD_REPLY_FAILURE","EDIT_REPLY","initialState","questions","questionsLoader","getQuestionsFailure","currentQuestion","currentQuestionLoader","currentQuestionFailure","askQuestionLoader","addQuestionLoader","questionReducer","state","action","type","payload","index","replies","findIndex","_id","console","log","question"],"mappings":"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","sourcesContent":["const {\n  GET_QUESTIONS_FAILURE,\n  GET_QUESTIONS_REQUEST,\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTION_DESCRIPTION_FAILURE,\n  GET_QUESTION_DESCRIPTION_REQUEST,\n  GET_QUESTION_DESCRIPTION_SUCCESS,\n  ASK_QUESTION_REQUEST,\n  ASK_QUESTION_SUCCESS,\n  ASK_QUESTION_FAILURE,\n  ADD_REPLY_REQUEST,\n  ADD_REPLY_SUCCESS,\n  ADD_REPLY_FAILURE,\n  EDIT_REPLY\n} = require(\"./questionTypes\");\n\nconst initialState = {\n  questions: [],\n  questionsLoader: false,\n  getQuestionsFailure: null,\n  currentQuestion: {},\n  currentQuestionLoader: false,\n  currentQuestionFailure: null,\n  askQuestionLoader: false,\n  addQuestionLoader: false\n};\n\nconst questionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_QUESTIONS_REQUEST:\n      return {\n        ...state,\n        questionsLoader: true,\n        getQuestionsFailure: null\n      };\n    case GET_QUESTIONS_SUCCESS:\n      return {\n        ...state,\n        questions: action.payload,\n        questionsLoader: false,\n        getQuestionsFailure: null\n      };\n    case GET_QUESTIONS_FAILURE:\n      return {\n        ...state,\n        questionsLoader: false,\n        getQuestionsFailure: action.payload\n      };\n    case GET_QUESTION_DESCRIPTION_REQUEST:\n      return {\n        ...state,\n        currentQuestionLoader: true,\n        currentQuestionFailure: null\n      };\n    case GET_QUESTION_DESCRIPTION_SUCCESS:\n      return {\n        ...state,\n        currentQuestionLoader: false,\n        currentQuestion: action.payload\n      };\n    case GET_QUESTION_DESCRIPTION_FAILURE:\n      return {\n        ...state,\n        currentQuestionLoader: false,\n        currentQuestionFailure: action.payload\n      };\n    case ASK_QUESTION_REQUEST:\n      return {\n        ...state,\n        askQuestionLoader: true\n      };\n    case ASK_QUESTION_SUCCESS:\n      return {\n        ...state,\n        askQuestionLoader: false\n      };\n    case ASK_QUESTION_FAILURE:\n      return {\n        ...state,\n        askQuestionLoader: false\n      };\n    case ADD_REPLY_REQUEST:\n      return {\n        ...state,\n        addQuestionLoader: true\n      };\n    case ADD_REPLY_SUCCESS:\n      return {\n        ...state,\n        addQuestionLoader: false\n      };\n    case ADD_REPLY_FAILURE:\n      return {\n        ...state,\n        addQuestionLoader: false\n      };\n    case EDIT_REPLY:\n      const index = state.currentQuestion.replies.findIndex(\n        ({ _id }) => _id === action.payload._id\n      );\n      console.log(state);\n      let question = state.currentQuestion;\n      question.replies[index] = action.payload;\n      return {\n        ...state,\n        currentQuestion: { ...question }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;\n"]},"metadata":{},"sourceType":"module"}