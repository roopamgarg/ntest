{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions as _getQuestions } from \"../redux/index\";\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions() {\n    _classCallCheck(this, Questions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Questions).apply(this, arguments));\n  }\n\n  _createClass(Questions, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      console.log(props);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"0 10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(List, {\n        className: \"demo-loadmore-list\",\n        loading: props.questionsLoader,\n        itemLayout: \"horizontal\",\n        dataSource: props.questions,\n        renderItem: function renderItem(item, index) {\n          return __jsx(Questions, {\n            item: item,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          padding: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(AskQuestion, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \"Ask Question\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store, isServer, pathname, query, action;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_getQuestions(\"\"));\n\n            case 4:\n              action = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(action(store.dispatch));\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                questions: store.getState().questions\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.question.questions,\n    questionsLoader: state.question.questionsLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(search, message) {\n      return dispatch(_getQuestions(search, message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/roopam/Videos/redcarpet/stack-overflow-clone/next-app/pages/index.js"],"names":["React","Component","List","connect","getQuestions","Layout","AskQuestion","Questions","props","console","log","padding","questionsLoader","questions","item","index","store","isServer","pathname","query","action","dispatch","getState","mapStateToProps","state","question","mapDispatchToProps","search","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;IAEMC,S;;;;;;;;;;;;;6BAUK;AACP,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAEH,KAAK,CAACI,eAFjB;AAGE,QAAA,UAAU,EAAC,YAHb;AAIE,QAAA,UAAU,EAAEJ,KAAK,CAACK,SAJpB;AAKE,QAAA,UAAU,EAAE,oBAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiB,MAAC,SAAD;AAAW,YAAA,IAAI,EAAED,IAAjB;AAAuB,YAAA,GAAG,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AAAA,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAK,QAAA,KAAK,EAAE;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD,eAAiBH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CARF,CADF,CADF;AAgBD;;;;;;;;;AA5B8BQ,cAAAA,K,QAAAA,K,EAAOC,Q,QAAAA,Q,EAAUC,Q,QAAAA,Q,EAAUC,K,QAAAA,K;;;+CAEjCf,aAAY,CAAC,EAAD,C;;;AAA3BgB,cAAAA,M;;+CACAA,MAAM,CAACJ,KAAK,CAACK,QAAP,C;;;+CACL;AAAER,gBAAAA,SAAS,EAAEG,KAAK,CAACM,QAAN,GAAiBT;AAA9B,e;;;;;+CAEA,E;;;;;;;;;;;;EAPWZ,S;;AAgCxB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCX,IAAAA,SAAS,EAAEW,KAAK,CAACC,QAAN,CAAeZ,SADM;AAEhCD,IAAAA,eAAe,EAAEY,KAAK,CAACC,QAAN,CAAeb;AAFA,GAAL;AAAA,CAA7B;;AAKA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAL,QAAQ,EAAI;AACrC,SAAO;AACLjB,IAAAA,YAAY,EAAE,sBAACuB,MAAD,EAASC,OAAT;AAAA,aAAqBP,QAAQ,CAACjB,aAAY,CAACuB,MAAD,EAASC,OAAT,CAAb,CAA7B;AAAA;AADT,GAAP;AAGD,CAJD;;AAKA,eAAezB,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/index\";\nimport Layout from \"../components/layout/Layout\";\nimport AskQuestion from \"../components/askQuestion/AskQuestion\";\n\nclass Questions extends Component {\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    try {\n      const action = await getQuestions(\"\");\n      await action(store.dispatch);\n      return { questions: store.getState().questions };\n    } catch (err) {\n      return {};\n    }\n  }\n  render() {\n    const props = this.props;\n    console.log(props);\n    return (\n      <Layout>\n        <div style={{ padding: \"0 10%\" }}>\n          <List\n            className=\"demo-loadmore-list\"\n            loading={props.questionsLoader}\n            itemLayout=\"horizontal\"\n            dataSource={props.questions}\n            renderItem={(item, index) => <Questions item={item} key={index}  />}\n          />\n          <div style={{ padding: \"2rem\" }}>\n            <AskQuestion {...props}>Ask Question</AskQuestion>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.question.questions,\n  questionsLoader: state.question.questionsLoader\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuestions: (search, message) => dispatch(getQuestions(search, message))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}